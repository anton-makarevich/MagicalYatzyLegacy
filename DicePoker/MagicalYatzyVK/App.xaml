<Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:sanet="clr-namespace:Sanet.Models"
             xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
             xmlns:controls="clr-namespace:Sanet.Controls"
             xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:ei="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions" 
             xmlns:eim="clr-namespace:Microsoft.Expression.Interactivity.Media;assembly=Microsoft.Expression.Interactions" 
             xmlns:common="clr-namespace:Sanet.Common"
             x:Class="MagicalYatzyVK.App"
             >
    <Application.Resources>
        <SolidColorBrush x:Key="SanetBlue" Color="#009cd6"/>
        <SolidColorBrush x:Key="PhoneForegroundBrush" Color="White"/>

        <!--Converters-->
        <common:BooleanToVisibilityConverter x:Key="VisibilityKey"/>
        <common:ReverseBooleanToVisibilityConverter x:Key="ReversedVisibilityKey"/>
        <common:BooleanToColorConverter x:Key="ColorKey"/>
        <common:BooleanToSolidBrushConverter x:Key="BrushKey"/>
        <common:ScoreTypeToColorConverter x:Key="ScoreKey"/>

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            
        </Style>
        <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="56"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="LineHeight" Value="40"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TranslateTransform X="-2" Y="8"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="MaxWidth" Value="80"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <Style x:Key="PlayerTileTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style x:Key="ContentButton" TargetType="Button">

            <Setter Property="HorizontalAlignment" Value="Left"/>

            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="White"/>

            <Setter Property="Foreground" Value="White"/>

            <Setter Property="BorderThickness" Value="0"/>

            <Setter Property="FontFamily" Value="White"/>

            <Setter Property="FontSize" Value="20"/>

            <Setter Property="Margin" Value="0" />

            <Setter Property="Padding" Value="0" />

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="ButtonBase">

                        <Grid Background="Transparent">

                            <VisualStateManager.VisualStateGroups>

                                <VisualStateGroup x:Name="CommonStates">

                                    <VisualState x:Name="Normal"/>

                                    <VisualState x:Name="MouseOver"/>

                                    <VisualState x:Name="Pressed">
                                        <Storyboard>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="Width">

                                                <DiscreteObjectKeyFrame KeyTime="0" Value="48" />
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="36" />
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="48" />

                                            </ObjectAnimationUsingKeyFrames>

                                        </Storyboard>
                                    </VisualState>
                                    

                                    <VisualState x:Name="Disabled">

                                        <Storyboard>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="Opacity">

                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0.5" />

                                            </ObjectAnimationUsingKeyFrames>

                                        </Storyboard>

                                    </VisualState>

                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>

                            <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Background="{TemplateBinding Background}" Margin="0" >

                                <ContentControl x:Name="ContentContainer" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Padding="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>

                            </Border>

                        </Grid>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>

        <Style TargetType="ListBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <ItemsPanelTemplate x:Key="WrapPanelItemsPanelTemplate" >
            <toolkit:WrapPanel />
        </ItemsPanelTemplate>

        <!--Player in chat-->
        <DataTemplate x:Key="ChatPlayerTemplate">
            <Grid >

                <TextBlock Margin="10"
                           Foreground="White">
                <Run Text="{Binding Name}" />
                <Run Text=" - " />
                <Run Text="{Binding Language}" />
                </TextBlock>


            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ChatMessageTemplate">
            <Grid >
                <Border
                Grid.RowSpan="2"
                Grid.ColumnSpan="2"
                Background="{StaticResource SanetBlue}"
                Opacity="0.6"
                BorderBrush="{StaticResource SanetBlue}"
                BorderThickness="2"
                Margin="2"/>
                <TextBlock TextWrapping="Wrap"
                       Margin="10,2"
                       Foreground="#FFFee5ca">
                    <Run Text="{Binding Path=SenderName}" FontWeight="Bold"/>
                    <Run Text=": "/>
                    <Run Text="{Binding Message}"/>
                </TextBlock>
            </Grid>
        </DataTemplate>

        <DataTemplate
            sanet:TiltEffect.SuppressTilt="True"
            x:Key="MainMenuTemplate">
            <Grid Height="95" Margin="10" HorizontalAlignment="Stretch"
                          >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="95"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Image
        			Height="90"
        			Width="90"
        			Source="{Binding Image}"
        			HorizontalAlignment="Center"
        			VerticalAlignment="Center"
                    />
                <StackPanel Grid.Column="1">
                    <TextBlock Text="{Binding LocalizedLabel}" Foreground="{StaticResource SanetBlue}" 
        				FontSize="35" Height="40" Margin="10,0,10,0" />
                    <TextBlock Text="{Binding LocalizedDescription}" Foreground="{StaticResource SanetBlue}" 
        				FontSize="20" Height="60" Margin="10,5,10,0" TextWrapping="Wrap" />
                </StackPanel>

            </Grid>
        </DataTemplate>


        <!--Datatemplate for app action in about page-->
        <DataTemplate x:Key="AboutAppActionTemplate">
            <Grid Height="70" Margin="0,15" HorizontalAlignment="Stretch"
                          >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition/>

                </Grid.ColumnDefinitions>
                <Image
        			Height="48"
        			Width="48"
        			Source="{Binding Image}"
        			HorizontalAlignment="Center"
        			VerticalAlignment="Center"
                    />
                <TextBlock Grid.Column="1"
        			Text="{Binding LocalizedLabel}" Foreground="{StaticResource SanetBlue}" 
        			HorizontalAlignment="Left"
        			VerticalAlignment="Center"
        			Margin="5,0,0,0"
        			TextAlignment="Left"
        			TextWrapping="Wrap"
        			TextTrimming="WordEllipsis"
        			FontSize="25" MaxHeight="70" />

            </Grid>
        </DataTemplate>


        <!--Datatemplate for main menu item-->
        <DataTemplate x:Key="TopPlayersTemplate">
            <Grid Height="35" Margin="0,0,0,0" HorizontalAlignment="Stretch"
                          >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="100"/>

                </Grid.ColumnDefinitions>
                <Image
                    Height="30"
                    Width="30"
                    Source="{Binding Image}"
                    />
                <Border Grid.Column="1"
        			BorderBrush="{StaticResource SanetBlue}"
        			BorderThickness="0,0,1,0">

                    <TextBlock Text="{Binding Name}" Foreground="{StaticResource PhoneForegroundBrush}" 
        				HorizontalAlignment="Left"
        				Margin="5,0,0,0"
        				TextAlignment="Left"
        				TextWrapping="NoWrap"
        				TextTrimming="WordEllipsis"
        				FontSize="18" Height="30" />
                </Border>
                <Border Grid.Column="2"
        			BorderBrush="{StaticResource SanetBlue}"
        			BorderThickness="0,0,1,0">

                    <TextBlock Text="{Binding Games}" Foreground="{StaticResource PhoneForegroundBrush}" 
        				HorizontalAlignment="Left"
        				TextAlignment="Left"
        				Margin="5,0,0,0"
        				TextWrapping="NoWrap"
        				TextTrimming="WordEllipsis"
        				FontSize="18" Height="30" />
                </Border>
                <Border Grid.Column="3"
        			BorderBrush="{StaticResource SanetBlue}"
        			BorderThickness="0,0,1,0">

                    <TextBlock Text="{Binding Total}" Foreground="{StaticResource PhoneForegroundBrush}" 
        				HorizontalAlignment="Left"
        				TextAlignment="Left"
        				Margin="5,0,0,0"
        				TextWrapping="NoWrap"
        				TextTrimming="WordEllipsis"
        				FontSize="18" Height="30" />
                </Border>
                <Border Grid.Column="4"
        			BorderBrush="{StaticResource SanetBlue}"
        			BorderThickness="0,0,0,0">

                    <TextBlock Text="{Binding Score}" Foreground="{StaticResource PhoneForegroundBrush}" 
        				HorizontalAlignment="Left"
        				Margin="5,0,0,0"
        				TextAlignment="Left"
        				TextWrapping="NoWrap"
        				TextTrimming="WordEllipsis"
        				FontSize="18" Height="30" />
                </Border>



            </Grid>
        </DataTemplate>


        <!--Datatemplate for main menu item-->
        <DataTemplate x:Key="RuleTemplate">
            <Grid Height="100" Margin="-5,5" HorizontalAlignment="Stretch"
                          >
                <!--Opacity="0.85" Background="{StaticResource SanetBlue}"-->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="125"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <controls:RotatingPanel
                x:Name="RulePanel" Width="100" Height="100" Background="Blue"
                                    Margin="0">
                    <Grid Height="100"
                    Width="100"
                      Visibility="{Binding IsFace,ElementName=RulePanel,Converter={StaticResource VisibilityKey}}"
                  Background="{StaticResource SanetBlue}"
                  >
                        <TextBlock Text="{Binding BestWeekScoreLabel}"
                           VerticalAlignment="Top" Style="{StaticResource PlayerTileTextStyle}"
                           Foreground="White"/>
                        <TextBlock Text="{Binding BestWeekScore}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Right"
                           Foreground="White"
                           Margin="2,5,2,2"
                           FontSize="25"/>
                        <TextBlock Text="{Binding BestWeekScorePlayer}"
                           VerticalAlignment="Bottom" Style="{StaticResource PlayerTileTextStyle}"
                                Foreground="White" TextWrapping="NoWrap"
                           />
                        
                        <controls:WaitIndicator IsActive="{Binding IsWeekScoreLoading}"
                                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          />
                    </Grid>

                    <Grid Height="100"
                    Width="100"
                      Visibility="{Binding IsFace,ElementName=RulePanel,Converter={StaticResource ReversedVisibilityKey}}"
                  Background="{StaticResource SanetBlue}"
                  >
                        <TextBlock Text="{Binding BestDayScoreLabel}"
                           VerticalAlignment="Top" Style="{StaticResource PlayerTileTextStyle}"
                           Foreground="White"/>
                        <TextBlock Text="{Binding BestDayScore}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Right"
                           Foreground="White"
                           Margin="2,5,2,2"
                           FontSize="25"/>
                        <TextBlock Text="{Binding BestDayScorePlayer}"
                           VerticalAlignment="Bottom" Style="{StaticResource PlayerTileTextStyle}"
                                Foreground="White" TextWrapping="NoWrap"
                           />
                        <controls:WaitIndicator IsActive="{Binding IsDayScoreLoading}"
                                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          />
                    </Grid>
                </controls:RotatingPanel>
                <Image 
                    Grid.Column="1"
                    Height="36"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Source="/Assets/check.png"
                    Visibility="{Binding IsSelected,Converter={StaticResource VisibilityKey}}"/>
                <StackPanel Grid.Column="1">
                    <TextBlock Text="{Binding NameLocalized}" Foreground="{StaticResource SanetBlue}" 
                                 FontSize="25" Height="30" Margin="5,5,0,0" />
                    <TextBlock Text="{Binding ShortDescriptionLocalized}" Foreground="{StaticResource SanetBlue}" 
                                 FontSize="18" Height="70" Margin="5,5,0,5" MaxWidth="510"
                           TextWrapping="Wrap" TextTrimming="WordEllipsis"
                           />
                </StackPanel>

            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ResultItemTemplate">
            <Grid Height="80" Width="80" Background="{Binding ScoreType,Converter={StaticResource ScoreKey}}"
              Margin="0,0,0,5">
                <TextBlock
                    Foreground="White"
                VerticalAlignment="Top"
                FontSize="36"
                HorizontalAlignment="Center"
                TextAlignment="Center"
                    Text="{Binding PossibleValue}" TextWrapping="NoWrap"/>
                <Grid VerticalAlignment="Bottom" Background="#7f3c3c3c" Height="30">

                    <TextBlock Text="{Binding AltText}" TextWrapping="NoWrap"
                               Foreground="White"
                               TextTrimming="WordEllipsis" VerticalAlignment="Center" FontWeight="Light" FontSize="12" />
                </Grid>
            </Grid>
        </DataTemplate>

        <!--Datatemplate for main menu item-->
        <DataTemplate x:Key="TableTemplate">
            <Grid Height="115" Width="115"
              Background="{StaticResource SanetBlue}"
              Margin="5" HorizontalAlignment="Stretch"
                          >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding Name}"
                      Style="{StaticResource PlayerTileTextStyle}"
                           Margin="1" TextWrapping="NoWrap"
                      HorizontalAlignment="Left"/>
                <ListBox
                    Background="Transparent"
                    BorderThickness="0"
                    IsHitTestVisible="False"
                Grid.Row="1"
                Margin="5,0,0,0"
                ItemsSource="{Binding Players}"
                HorizontalAlignment="Left"
                    ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                    ScrollViewer.VerticalScrollBarVisibility="Hidden"
                >
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}"
                                       FontSize="14"
                                   Height="29" Style="{StaticResource PlayerTileTextStyle}"
                                   TextAlignment="Left"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Width" Value="110"/>
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="Margin"  Value="0"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>

                <Image 
                    Grid.RowSpan="2"
                    Height="24"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Source="/Assets/check.png"
                    Visibility="{Binding IsSelected,Converter={StaticResource VisibilityKey}}"/>

            </Grid>
        </DataTemplate>

        <!--Datatemplate for table results-->
        <DataTemplate x:Key="PlayerTableTemplate">
            <Border BorderThickness="2" BorderBrush="{Binding IsMoving, Converter={StaticResource BrushKey}}">

                <StackPanel>
                    <Border BorderThickness="0,0,0,1" BorderBrush="{StaticResource SanetBlue}">
                        <Grid Height="59" 
                              Width="60"
                              Margin="0" HorizontalAlignment="Stretch"
                              Background="{Binding IsMoving, Converter={StaticResource BrushKey}}"            >
                            <Grid.Resources>
                                <Storyboard x:Name="FlashNameChanged">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                        <EasingColorKeyFrame KeyTime="0" Value="Yellow"/>
                                        <EasingColorKeyFrame KeyTime="0:0:2" Value="White"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="textBlock">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <BackEase EasingMode="EaseIn"/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                        <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <ElasticEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="textBlock">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.45">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <BackEase EasingMode="EaseIn"/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                        <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <ElasticEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="textBlock">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.65">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <BackEase EasingMode="EaseIn"/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                        <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <ElasticEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Name="TurnTimerAnimation">

                                    <ColorAnimation Duration="{Binding Duration}" To="Yellow" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="timerShape" />
                                    <DoubleAnimation Duration="{Binding Duration}" From="1" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="timerShape" />
                                </Storyboard>
                            </Grid.Resources>
                            <i:Interaction.Triggers>
                                <ei:DataTrigger Binding="{Binding IsMyTurn}" Value="true">
                                    <eim:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource FlashNameChanged}"/>
                                </ei:DataTrigger>
                                <ei:DataTrigger Binding="{Binding IsMyTurn}" Value="true">
                                    <eim:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource TurnTimerAnimation}"/>
                                </ei:DataTrigger>
                            </i:Interaction.Triggers>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Image
                            Margin="-5,0,0,0"
                            VerticalAlignment="top"
                            HorizontalAlignment="Left"
                            MaxHeight="35"
                            Source="{Binding ProfilePhoto}"/>

                            <TextBlock
                            Grid.Row="1"
                                Margin="-5,10,0,0"
                                  x:Name="textBlock"
                                  Text="{Binding Name}"
                                     HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                       Foreground ="White"
                                       TextWrapping="Wrap"
                                       TextAlignment="Center"
                                       Width="60"
                                     FontSize="12">
                                <TextBlock.RenderTransform>
                                    <CompositeTransform/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                            <Path x:Name="timerShape" Data="M 0,0 L50,0 L50,5 L0,5z" 
                              Visibility="{Binding IsMyTurn, Converter={StaticResource VisibilityKey}}"
                              VerticalAlignment="Bottom"
                              Fill="YellowGreen"
                              Margin="-10,5,0,-5"
                              Height="5" Stretch="Fill" Stroke="White" StrokeThickness="0" 
                              UseLayoutRounding="False" Width="50" RenderTransformOrigin="0,1">
                                <Path.RenderTransform>
                                    <CompositeTransform/>
                                </Path.RenderTransform>
                            </Path>
                            <Image Source="/Assets/check.png"
                               Height="16" 
                               Margin="10,0"
                               Grid.RowSpan="2"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Top"
                               Visibility="{Binding IsReady,Converter={StaticResource VisibilityKey}}"/>

                        </Grid>
                    </Border>
                    <ListBox
                    IsHitTestVisible="false"
                    ItemsSource="{Binding Results}"
                    ItemTemplate="{StaticResource PlayerTableItemTemplate}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.VerticalScrollBarVisibility="Disabled"
                    >
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Width" Value="60"/>
                                <Setter Property="Height" Value="34"/>
                                <Setter Property="Margin" Value="0,0,0,-2"/>
                            </Style>
                        </ListBox.ItemContainerStyle>

                    </ListBox>
                    <Grid Height="40" 
              Width="60"
              Margin="0,2" HorizontalAlignment="Stretch"
              >
                        <Border Margin="0,-2,0,-2"
                                BorderThickness="0,1,0,0" BorderBrush="{StaticResource SanetBlue}">
                            <TextBlock Text="{Binding Total}"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                                   Foreground="White"
                       TextTrimming="WordEllipsis"
                       TextWrapping="Wrap"
                       TextAlignment="Center"
                       Width="50"
                     FontSize="20"/>

                        </Border>
                        
                    </Grid>
                </StackPanel>
            </Border>


        </DataTemplate>

        <!--Datatemplate for table results cell-->
        <DataTemplate x:Key="PlayerTableItemTemplate">
            <Border Margin="-5,0,0,-2"
                BorderThickness="0,0,0,1" BorderBrush="{StaticResource SanetBlue}">
                <Border.Resources>
                    <!--Storyboards-->
                    <Storyboard x:Name="ValueChanged">
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="backGrid">
                            <EasingColorKeyFrame KeyTime="0" Value="Yellow"/>
                            <EasingColorKeyFrame KeyTime="0:0:2" Value="#009cd6"/>
                        </ColorAnimationUsingKeyFrames>

                    </Storyboard>

                </Border.Resources>
                <i:Interaction.Triggers>
                    <ei:DataTrigger Binding="{Binding HasValue}" Value="true">
                        <eim:ControlStoryboardAction Storyboard="{StaticResource ValueChanged}"/>
                    </ei:DataTrigger>

                </i:Interaction.Triggers>

                <Grid Height="34"
                  x:Name="backGrid"
                    Width="60"
                    Margin="0,-2,0,-2" HorizontalAlignment="Stretch"
                    >
                    <Grid.Background>
                        <SolidColorBrush
                            Color="{Binding HasValue, Converter={StaticResource ColorKey}}"/>
                    </Grid.Background>
                    <Grid
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch">
                        <TextBlock Text="{Binding Value}" TextAlignment="Center"
                           Width="45" 
                                   Foreground ="White"
                               VerticalAlignment="Center"
                     HorizontalAlignment="Left" 
                     FontSize="16"
                           Visibility="{Binding HasValue,Converter={StaticResource VisibilityKey}}"/>
                        <TextBlock Text="+100" TextAlignment="Center"
                           Width="45" 
                     HorizontalAlignment="Right" 
                                   Foreground ="White"
                               VerticalAlignment="Bottom"
                               Margin="0,0,0,-3"
                     FontSize="10"
                           Visibility="{Binding HasBonus,Converter={StaticResource VisibilityKey}}"/>
                    </Grid>

                </Grid>
            </Border>

        </DataTemplate>

        <!--Datatablet for cells in table captions (left side scores names)-->
        <DataTemplate x:Key="PlayerTableCaptionTemplate">
            <Border Margin="0,-2,0,-2"
                BorderThickness="0,0,0,1" BorderBrush="{StaticResource SanetBlue}">
                <Grid Height="30" 
                     Margin="0,-2,0,4" HorizontalAlignment="Stretch"
                >
                    <TextBlock Text="{Binding AltText}" TextAlignment="Left"
                               Foreground ="White"
                           Margin="2,0,0,0" TextTrimming="WordEllipsis"
                           HorizontalAlignment="Left" VerticalAlignment="Center"
                     FontSize="12"
                           />

                </Grid>
            </Border>

        </DataTemplate>

        <!--Game result table template-->
        <DataTemplate x:Key="GameResultsTemplate">
            <Grid Width="600" HorizontalAlignment="Stretch"
                >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*"/>
                    <ColumnDefinition Width="20*"/>
                    <ColumnDefinition Width="50*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Name}" TextAlignment="Left"
                           TextTrimming="WordEllipsis"
                           Foreground="White"
                           HorizontalAlignment="Left" VerticalAlignment="Center"
                     FontSize="24"
                           />
                <TextBlock Text="{Binding Total}" TextAlignment="Center"
                       Grid.Column="1"
                           Foreground="White"
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                     FontSize="25"/>
                <CheckBox 
                    VerticalAlignment="Center"
                Grid.Column="2"
                    Foreground="White"
                Content="{Binding PlayerSaveScoreLabelLocalized}"
                IsChecked="{Binding ShouldSaveResult, Mode=TwoWay}"
                IsEnabled="{Binding CanSaveResult}"/>
            </Grid>

        </DataTemplate>


        <Style x:Key="TabItemStyle1" TargetType="sdk:TabItem">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Background" Value="#FF1F3B53"/>
            <Setter Property="BorderBrush" Value="#FFA3AEB9"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="MinWidth" Value="5"/>
            <Setter Property="MinHeight" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="sdk:TabItem">
                        <Grid x:Name="Root">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BorderTop">
                                                <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="GradientTop">
                                                <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="GradientTop">
                                                <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="GradientTop">
                                                <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="GradientBottom">
                                                <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="GradientBottom">
                                                <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="GradientBottom">
                                                <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="GradientLeft">
                                                <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="GradientLeft">
                                                <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="GradientLeft">
                                                <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="GradientRight">
                                                <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="GradientRight">
                                                <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="GradientRight">
                                                <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusVisualTop">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusVisualBottom">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusVisualLeft">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusVisualRight">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualTopSelected">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualTopUnSelected">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualBottomSelected">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualBottomUnSelected">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualLeftSelected">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualLeftUnSelected">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualRightSelected">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualRightUnSelected">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualTop">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualBottom">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualLeft">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualRight">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="TemplateTopSelected" Visibility="Collapsed" Canvas.ZIndex="1">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" CornerRadius="3,3,0,0" Margin="-2,-2,-2,0">
                                    <Border BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius="1,1,0,0">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                <GradientStop Color="Transparent" Offset="0"/>
                                                <GradientStop Color="Transparent" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Grid>
                                            <Rectangle Fill="Transparent" Margin="0,0,0,-2"/>
                                            <ContentControl x:Name="HeaderTopSelected" Cursor="{TemplateBinding Cursor}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" IsTabStop="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                                        </Grid>
                                    </Border>
                                </Border>
                                <Border x:Name="FocusVisualTop" BorderBrush="#FF6DBDD1" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" IsHitTestVisible="false" Margin="-2,-2,-2,0" Visibility="Collapsed"/>
                                <Border x:Name="DisabledVisualTopSelected" Background="#8CFFFFFF" CornerRadius="3,3,0,0" IsHitTestVisible="false" Margin="-2,-2,-2,0" Opacity="0"/>
                            </Grid>
                            <Grid x:Name="TemplateTopUnselected" Visibility="Collapsed">
                                <Border x:Name="BorderTop" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="3,3,0,0">
                                    <Border x:Name="GradientTop" BorderBrush="Transparent" BorderThickness="1" CornerRadius="1,1,0,0">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                <GradientStop Color="Transparent" Offset="0"/>
                                                <GradientStop Color="Transparent" Offset="0.375"/>
                                                <GradientStop Color="Transparent" Offset="0.625"/>
                                                <GradientStop Color="Transparent" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Grid>
                                            <ContentControl x:Name="HeaderTopUnselected" Cursor="{TemplateBinding Cursor}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" IsTabStop="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                                        </Grid>
                                    </Border>
                                </Border>
                                <Border x:Name="DisabledVisualTopUnSelected" Background="#8CFFFFFF" CornerRadius="3,3,0,0" IsHitTestVisible="false" Opacity="0"/>
                            </Grid>
                            <Grid x:Name="TemplateBottomSelected" Visibility="Collapsed" Canvas.ZIndex="1">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3" Margin="-2,0,-2,-2">
                                    <Border BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius="0,0,1,1">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Grid>
                                            <Rectangle Fill="#FFFFFFFF" Margin="0,-2,0,0"/>
                                            <ContentControl x:Name="HeaderBottomSelected" Cursor="{TemplateBinding Cursor}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" IsTabStop="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                                        </Grid>
                                    </Border>
                                </Border>
                                <Border x:Name="FocusVisualBottom" BorderBrush="#FF6DBDD1" BorderThickness="1,0,1,1" CornerRadius="0,0,3,3" IsHitTestVisible="false" Margin="-2,0,-2,-2" Visibility="Collapsed"/>
                                <Border x:Name="DisabledVisualBottomSelected" Background="#8CFFFFFF" CornerRadius="0,0,3,3" IsHitTestVisible="false" Margin="-2,0,-2,-2" Opacity="0"/>
                            </Grid>
                            <Grid x:Name="TemplateBottomUnselected" Visibility="Collapsed">
                                <Border x:Name="BorderBottom" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3">
                                    <Border x:Name="GradientBottom" BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius="0,0,1,1">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Grid>
                                            <ContentControl x:Name="HeaderBottomUnselected" Cursor="{TemplateBinding Cursor}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" IsTabStop="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                                        </Grid>
                                    </Border>
                                </Border>
                                <Border x:Name="DisabledVisualBottomUnSelected" Background="#8CFFFFFF" CornerRadius="0,0,3,3" IsHitTestVisible="false" Opacity="0"/>
                            </Grid>
                            <Grid x:Name="TemplateLeftSelected" Visibility="Collapsed" Canvas.ZIndex="1">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,0,1" Background="{TemplateBinding Background}" CornerRadius="3,0,0,3" Margin="-2,-2,0,-2">
                                    <Border BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius="1,0,0,1">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Grid>
                                            <Rectangle Fill="#FFFFFFFF" Margin="0,0,-2,0"/>
                                            <ContentControl x:Name="HeaderLeftSelected" Cursor="{TemplateBinding Cursor}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" IsTabStop="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                                        </Grid>
                                    </Border>
                                </Border>
                                <Border x:Name="FocusVisualLeft" BorderBrush="#FF6DBDD1" BorderThickness="1,1,0,1" CornerRadius="3,0,0,3" IsHitTestVisible="false" Margin="-2,-2,0,-2" Visibility="Collapsed"/>
                                <Border x:Name="DisabledVisualLeftSelected" Background="#8CFFFFFF" CornerRadius="3,0,0,3" IsHitTestVisible="false" Margin="-2,-2,0,-2" Opacity="0"/>
                            </Grid>
                            <Grid x:Name="TemplateLeftUnselected" Visibility="Collapsed">
                                <Border x:Name="BorderLeft" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3,0,0,3">
                                    <Border x:Name="GradientLeft" BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius="1,0,0,1">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Grid>
                                            <ContentControl x:Name="HeaderLeftUnselected" Cursor="{TemplateBinding Cursor}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" IsTabStop="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                                        </Grid>
                                    </Border>
                                </Border>
                                <Border x:Name="DisabledVisualLeftUnSelected" Background="#8CFFFFFF" CornerRadius="3,0,0,3" IsHitTestVisible="false" Opacity="0"/>
                            </Grid>
                            <Grid x:Name="TemplateRightSelected" Visibility="Collapsed" Canvas.ZIndex="1">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,1,1" Background="{TemplateBinding Background}" CornerRadius="0,3,3,0" Margin="0,-2,-2,-2">
                                    <Border BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius="0,1,1,0">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Grid>
                                            <Rectangle Fill="#FFFFFFFF" Margin="-2,0,0,0"/>
                                            <ContentControl x:Name="HeaderRightSelected" Cursor="{TemplateBinding Cursor}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" IsTabStop="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                                        </Grid>
                                    </Border>
                                </Border>
                                <Border x:Name="FocusVisualRight" BorderBrush="#FF6DBDD1" BorderThickness="0,1,1,1" CornerRadius="0,3,3,0" IsHitTestVisible="false" Margin="0,-2,-2,-2" Visibility="Collapsed"/>
                                <Border x:Name="DisabledVisualRightSelected" Background="#8CFFFFFF" CornerRadius="0,3,3,0" IsHitTestVisible="false" Margin="0,-2,-2,-2" Opacity="0"/>
                            </Grid>
                            <Grid x:Name="TemplateRightUnselected" Visibility="Collapsed">
                                <Border x:Name="BorderRight" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="0,3,3,0">
                                    <Border x:Name="GradientRight" BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius="0,1,1,0">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Grid>
                                            <ContentControl x:Name="HeaderRightUnselected" Cursor="{TemplateBinding Cursor}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" IsTabStop="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                                        </Grid>
                                    </Border>
                                </Border>
                                <Border x:Name="DisabledVisualRightUnSelected" Background="#8CFFFFFF" CornerRadius="0,3,3,0" IsHitTestVisible="false" Opacity="0"/>
                            </Grid>
                            <Border x:Name="FocusVisualElement" BorderBrush="#FF6DBDD1" BorderThickness="1" CornerRadius="3,3,0,0" IsHitTestVisible="false" Margin="-1" Visibility="Collapsed"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
