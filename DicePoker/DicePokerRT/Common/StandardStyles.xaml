<!--
    This file contains XAML styles that simplify application development.

    These are not merely convenient, but are required by most Visual Studio project and item templates.
    Removing, renaming, or otherwise modifying the content of these files may result in a project that
    does not build, or that will not build once additional pages are added.  If variations on these
    styles are desired it is recommended that you copy the content under a new name and modify your
    private copy.
-->

<ResourceDictionary
    xmlns:Controls="using:Sanet.Controls" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="using:Sanet.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Triggers="using:WinRT.Triggers" mc:Ignorable="d">
    
    <!-- Non-brush values that vary across themes -->

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <x:String x:Key="BackButtonGlyph">&#xE071;</x:String>
            <x:String x:Key="BackButtonSnappedGlyph">&#xE0BA;</x:String>
        </ResourceDictionary>

        <ResourceDictionary x:Key="HighContrast">
            <x:String x:Key="BackButtonGlyph">&#xE071;</x:String>
            <x:String x:Key="BackButtonSnappedGlyph">&#xE0C4;</x:String>
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <x:String x:Key="ChevronGlyph">&#xE26B;</x:String>
    <common:ScoreTypeToColorConverter x:Key="ScoreKey"/>
    <common:BooleanToColorConverter x:Key="ColorKey"/>
    <common:ReverseBooleanToVisibilityConverter x:Key="ReversedVisibilityKey"/>
    <common:BooleanToVisibilityConverter x:Key="VisibilityKey"/>
    
    <!-- RichTextBlock styles -->

    <Style x:Key="BasicRichTextStyle" TargetType="RichTextBlock">
        <Setter Property="Foreground" Value="{StaticResource ApplicationForegroundThemeBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="TextTrimming" Value="WordEllipsis"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Typography.StylisticSet20" Value="True"/>
        <Setter Property="Typography.DiscretionaryLigatures" Value="True"/>
        <Setter Property="Typography.CaseSensitiveForms" Value="True"/>
    </Style>

    <Style x:Key="BaselineRichTextStyle" TargetType="RichTextBlock" BasedOn="{StaticResource BasicRichTextStyle}">
        <Setter Property="LineHeight" Value="20"/>
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
        <!-- Properly align text along its baseline -->
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-1" Y="4"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ItemRichTextStyle" TargetType="RichTextBlock" BasedOn="{StaticResource BaselineRichTextStyle}"/>

    <Style x:Key="BodyRichTextStyle" TargetType="RichTextBlock" BasedOn="{StaticResource BaselineRichTextStyle}">
        <Setter Property="FontWeight" Value="SemiLight"/>
    </Style>

    <SolidColorBrush x:Key="SanetBlue" Color="#009cd6"/>
    <!-- TextBlock styles -->

    <Style x:Name="SimpleTextStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="2"/>
    </Style>
    
    <Style x:Key="BasicTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ApplicationForegroundThemeBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="TextTrimming" Value="WordEllipsis"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Typography.StylisticSet20" Value="True"/>
        <Setter Property="Typography.DiscretionaryLigatures" Value="True"/>
        <Setter Property="Typography.CaseSensitiveForms" Value="True"/>
        <Setter Property="Margin" Value="2"/>
    </Style>

    <Style x:Key="BaselineTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BasicTextStyle}">
        <Setter Property="LineHeight" Value="20"/>
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
        <!-- Properly align text along its baseline -->
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-1" Y="4"/>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="BlueCommonTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BasicTextStyle}">
        <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Foreground" Value="{StaticResource SanetBlue}"/>
    </Style>

    <Style x:Key="HeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
        <Setter Property="FontSize" Value="56"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="LineHeight" Value="40"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-2" Y="8"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SubheaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
        <Setter Property="FontSize" Value="26.667"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="LineHeight" Value="30"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-1" Y="6"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style x:Key="SubtitleTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>

    <Style x:Key="PlayerTitleTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="ItemTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}"/>

    <Style x:Key="BodyTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
        <Setter Property="FontWeight" Value="SemiLight"/>
    </Style>

    <Style x:Key="CaptionTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource ApplicationSecondaryForegroundThemeBrush}"/>
    </Style>

    <Style x:Key="GroupHeaderTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="TextTrimming" Value="WordEllipsis"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="Typography.StylisticSet20" Value="True"/>
        <Setter Property="Typography.DiscretionaryLigatures" Value="True"/>
        <Setter Property="Typography.CaseSensitiveForms" Value="True"/>
        <Setter Property="FontSize" Value="26.667"/>
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="LineHeight" Value="30"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-1" Y="6"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button styles -->
    
    <!--
        TextButtonStyle is used to style a Button using subheader-styled text with no other adornment.  There
        are two styles that are based on TextButtonStyle (TextPrimaryButtonStyle and TextSecondaryButtonStyle)
        which are used in the GroupedItemsPage as a group header and in the FileOpenPickerPage for triggering
        commands.
    -->
    <Style x:Key="TextButtonStyle" TargetType="ButtonBase">
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid Background="Transparent">
                        <ContentPresenter x:Name="Text" Content="{TemplateBinding Content}" />
                        <Rectangle
                            x:Name="FocusVisualWhite"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="1.5"/>
                        <Rectangle
                            x:Name="FocusVisualBlack"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="0.5"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPointerOverForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationSecondaryForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextPrimaryButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource TextButtonStyle}">
        <Setter Property="Foreground" Value="{StaticResource ApplicationHeaderForegroundThemeBrush}"/>
    </Style>

    <Style x:Key="TextSecondaryButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource TextButtonStyle}">
        <Setter Property="Foreground" Value="{StaticResource ApplicationSecondaryForegroundThemeBrush}"/>
    </Style>

    <!--
        TextRadioButtonStyle is used to style a RadioButton using subheader-styled text with no other adornment.
        This style is used in the SearchResultsPage to allow selection among filters.
    -->
    <Style x:Key="TextRadioButtonStyle" TargetType="RadioButton" BasedOn="{StaticResource TextButtonStyle}">
        <Setter Property="Margin" Value="0,0,30,0"/>
    </Style>

    <!--
        AppBarButtonStyle is used to style a Button (or ToggleButton) for use in an App Bar.  Content will be centered 
        and should fit within the 40 pixel radius glyph provided.  16-point Segoe UI Symbol is used for content text 
        to simplify the use of glyphs from that font.  AutomationProperties.Name is used for the text below the glyph.
    -->
    <Style x:Key="AppBarButtonStyle" TargetType="ButtonBase">
        <Setter Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid x:Name="RootGrid" Width="100" Background="Transparent">
                        <StackPanel VerticalAlignment="Top" Margin="0,12,0,11">
                            <Grid Width="40" Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
                                <TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemBackgroundThemeBrush}"/>
                                <TextBlock x:Name="OutlineGlyph" Text="&#xE0A7;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0"/>
                                <ContentPresenter x:Name="Content" HorizontalAlignment="Center" Margin="-1,-1,0,0" VerticalAlignment="Center"/>
                            </Grid>
                            <TextBlock
                                x:Name="TextLabel"
                                Text="{TemplateBinding AutomationProperties.Name}"
                                Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
                                Margin="0,0,2,0"
                                FontSize="12"
                                TextAlignment="Center"
                                Width="88"
                                MaxHeight="32"
                                TextTrimming="WordEllipsis"
                                Style="{StaticResource BasicTextStyle}"/>
                        </StackPanel>
                        <Rectangle
                                x:Name="FocusVisualWhite"
                                IsHitTestVisible="False"
                                Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                                StrokeEndLineCap="Square"
                                StrokeDashArray="1,1"
                                Opacity="0"
                                StrokeDashOffset="1.5"/>
                        <Rectangle
                                x:Name="FocusVisualBlack"
                                IsHitTestVisible="False"
                                Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                                StrokeEndLineCap="Square"
                                StrokeDashArray="1,1"
                                Opacity="0"
                                StrokeDashOffset="0.5"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ApplicationViewStates">
                                <VisualState x:Name="FullScreenLandscape"/>
                                <VisualState x:Name="Filled"/>
                                <VisualState x:Name="FullScreenPortrait">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Snapped">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                                Storyboard.TargetName="FocusVisualWhite"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1"
                                                Duration="0"/>
                                        <DoubleAnimation
                                                Storyboard.TargetName="FocusVisualBlack"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1"
                                                Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Opacity"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
        Standard AppBarButton Styles for use with Button and ToggleButton
    
        An AppBarButton Style is provided for each of the glyphs in the Segoe UI Symbol font.  
        Uncomment any style you reference (as not all may be required).
    -->

    <!--
    
    <Style x:Key="SkipBackAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SkipBackAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Skip Back"/>
        <Setter Property="Content" Value="&#xE100;"/>
    </Style>
    <Style x:Key="SkipAheadAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SkipAheadAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Skip Ahead"/>
        <Setter Property="Content" Value="&#xE101;"/>
    </Style>
    <Style x:Key="PlayAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PlayAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Play"/>
        <Setter Property="Content" Value="&#xE102;"/>
    </Style>
    <Style x:Key="PauseAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PauseAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Pause"/>
        <Setter Property="Content" Value="&#xE103;"/>
    </Style>
    <Style x:Key="EditAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="EditAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Edit"/>
        <Setter Property="Content" Value="&#xE104;"/>
    </Style>
    <Style x:Key="SaveAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SaveAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Save"/>
        <Setter Property="Content" Value="&#xE105;"/>
    </Style>-->
    <Style x:Key="DeleteAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="DeleteAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Delete"/>
        <Setter Property="Content" Value="&#xE106;"/>
    </Style>
    <!--<Style x:Key="DiscardAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="DiscardAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Discard"/>
        <Setter Property="Content" Value="&#xE107;"/>
    </Style>
    <Style x:Key="RemoveAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="RemoveAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Remove"/>
        <Setter Property="Content" Value="&#xE108;"/>
    </Style>
    <Style x:Key="AddAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="AddAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Add"/>
        <Setter Property="Content" Value="&#xE109;"/>
    </Style>
    <Style x:Key="NoAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="NoAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="No"/>
        <Setter Property="Content" Value="&#xE10A;"/>
    </Style>
    <Style x:Key="YesAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="YesAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Yes"/>
        <Setter Property="Content" Value="&#xE10B;"/>
    </Style>
    <Style x:Key="MoreAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="MoreAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="More"/>
        <Setter Property="Content" Value="&#xE10C;"/>
    </Style>-->
    <Style x:Key="RedoAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="RedoAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Redo"/>
        <Setter Property="Content" Value="&#xE10D;"/>
    </Style>
    <!--<Style x:Key="UndoAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="UndoAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Undo"/>
        <Setter Property="Content" Value="&#xE10E;"/>
    </Style>
    <Style x:Key="HomeAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="HomeAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Home"/>
        <Setter Property="Content" Value="&#xE10F;"/>
    </Style>
    <Style x:Key="OutAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="OutAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Out"/>
        <Setter Property="Content" Value="&#xE110;"/>
    </Style>
    <Style x:Key="NextAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="NextAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Next"/>
        <Setter Property="Content" Value="&#xE111;"/>
    </Style>
    <Style x:Key="PreviousAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PreviousAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Previous"/>
        <Setter Property="Content" Value="&#xE112;"/>
    </Style>
    <Style x:Key="FavoriteAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="FavoriteAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Favorite"/>
        <Setter Property="Content" Value="&#xE113;"/>
    </Style>
    <Style x:Key="PhotoAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PhotoAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Photo"/>
        <Setter Property="Content" Value="&#xE114;"/>
    </Style>
    <Style x:Key="SettingsAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SettingsAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Settings"/>
        <Setter Property="Content" Value="&#xE115;"/>
    </Style>
    -->

    <!--
    <Style x:Key="VideoAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="VideoAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Video"/>
        <Setter Property="Content" Value="&#xE116;"/>
    </Style>
    <Style x:Key="RefreshAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="RefreshAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Refresh"/>
        <Setter Property="Content" Value="&#xE117;"/>
    </Style>
    <Style x:Key="DownloadAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="DownloadAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Download"/>
        <Setter Property="Content" Value="&#xE118;"/>
    </Style>
    <Style x:Key="MailAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="MailAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Mail"/>
        <Setter Property="Content" Value="&#xE119;"/>
    </Style>
    <Style x:Key="SearchAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SearchAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Search"/>
        <Setter Property="Content" Value="&#xE11A;"/>
    </Style>
    <Style x:Key="HelpAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="HelpAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Help"/>
        <Setter Property="Content" Value="&#xE11B;"/>
    </Style>
    <Style x:Key="UploadAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="UploadAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Upload"/>
        <Setter Property="Content" Value="&#xE11C;"/>
    </Style>
    <Style x:Key="EmojiAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="EmojiAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Emoji"/>
        <Setter Property="Content" Value="&#xE11D;"/>
    </Style>
    <Style x:Key="TwoPageAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="TwoPageAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Two Page"/>
        <Setter Property="Content" Value="&#xE11E;"/>
    </Style>
    <Style x:Key="LeaveChatAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="LeaveChatAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Upload"/>
        <Setter Property="Content" Value="&#xE11F;"/>
    </Style>
    <Style x:Key="MailForwardAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="MailForwardAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Forward Mail"/>
        <Setter Property="Content" Value="&#xE120;"/>
    </Style>
    <Style x:Key="ClockAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ClockAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Clock"/>
        <Setter Property="Content" Value="&#xE121;"/>
    </Style>
    <Style x:Key="SendAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SendAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Send"/>
        <Setter Property="Content" Value="&#xE122;"/>
    </Style>
    <Style x:Key="CropAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="CropAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Crop"/>
        <Setter Property="Content" Value="&#xE123;"/>
    </Style>
    <Style x:Key="RotateCameraAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="RotateCameraAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Rotate Camera"/>
        <Setter Property="Content" Value="&#xE124;"/>
    </Style>
    <Style x:Key="PeopleAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PeopleAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="People"/>
        <Setter Property="Content" Value="&#xE125;"/>
    </Style>
    <Style x:Key="ClosePaneAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ClosePaneAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Close Pane"/>
        <Setter Property="Content" Value="&#xE126;"/>
    </Style>
    <Style x:Key="OpenPaneAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="OpenPaneAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Open Pane"/>
        <Setter Property="Content" Value="&#xE127;"/>
    </Style>
    -->

    <!--
    <Style x:Key="WorldAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="WorldAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="World"/>
        <Setter Property="Content" Value="&#xE128;"/>
    </Style>
    <Style x:Key="FlagAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="FlagAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Flag"/>
        <Setter Property="Content" Value="&#xE129;"/>
    </Style>
    <Style x:Key="PreviewLinkAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PreviewLinkAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Preview Link"/>
        <Setter Property="Content" Value="&#xE12A;"/>
    </Style>
    <Style x:Key="GlobeAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="GlobeAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Globe"/>
        <Setter Property="Content" Value="&#xE12B;"/>
    </Style>
    <Style x:Key="TrimAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="TrimAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Trim"/>
        <Setter Property="Content" Value="&#xE12C;"/>
    </Style>
    <Style x:Key="AttachCameraAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="AttachCameraAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Attach Camera"/>
        <Setter Property="Content" Value="&#xE12D;"/>
    </Style>
    <Style x:Key="ZoomInAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ZoomInAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Zoom In"/>
        <Setter Property="Content" Value="&#xE12E;"/>
    </Style>
    <Style x:Key="BookmarksAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="BookmarksAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Bookmarks"/>
        <Setter Property="Content" Value="&#xE12F;"/>
    </Style>
    <Style x:Key="DocumentAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="DocumentAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Document"/>
        <Setter Property="Content" Value="&#xE130;"/>
    </Style>
    <Style x:Key="ProtectedDocumentAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ProtectedDocumentAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Protected Document"/>
        <Setter Property="Content" Value="&#xE131;"/>
    </Style>
    <Style x:Key="PageAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PageAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Page"/>
        <Setter Property="Content" Value="&#xE132;"/>
    </Style>
    <Style x:Key="BulletsAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="BulletsAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Bullets"/>
        <Setter Property="Content" Value="&#xE133;"/>
    </Style>
    <Style x:Key="CommentAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="CommentAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Comment"/>
        <Setter Property="Content" Value="&#xE134;"/>
    </Style>
    <Style x:Key="Mail2AppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="Mail2AppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Mail2"/>
        <Setter Property="Content" Value="&#xE135;"/>
    </Style>
    <Style x:Key="ContactInfoAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ContactInfoAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Contact Info"/>
        <Setter Property="Content" Value="&#xE136;"/>
    </Style>
    <Style x:Key="HangUpAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="HangUpAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Hang Up"/>
        <Setter Property="Content" Value="&#xE137;"/>
    </Style>
    <Style x:Key="ViewAllAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ViewAllAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="View All"/>
        <Setter Property="Content" Value="&#xE138;"/>
    </Style>
    <Style x:Key="MapPinAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="MapPinAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Map Pin"/>
        <Setter Property="Content" Value="&#xE139;"/>
    </Style>
    <Style x:Key="PhoneAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PhoneAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Phone"/>
        <Setter Property="Content" Value="&#xE13A;"/>
    </Style>
    <Style x:Key="VideoChatAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="VideoChatAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Video Chat"/>
        <Setter Property="Content" Value="&#xE13B;"/>
    </Style>
    <Style x:Key="SwitchAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SwitchAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Switch"/>
        <Setter Property="Content" Value="&#xE13C;"/>
    </Style>
    <Style x:Key="ContactAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ContactAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Contact"/>
        <Setter Property="Content" Value="&#xE13D;"/>
    </Style>

    -->

    <!--

    <Style x:Key="RenameAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="RenameAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Rename"/>
        <Setter Property="Content" Value="&#xE13E;"/>
    </Style>
    <Style x:Key="PinAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PinAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Pin"/>
        <Setter Property="Content" Value="&#xE141;"/>
    </Style>
    <Style x:Key="MusicInfoAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="MusicInfoAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Music Info"/>
        <Setter Property="Content" Value="&#xE142;"/>
    </Style>
    <Style x:Key="GoAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="GoAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Go"/>
        <Setter Property="Content" Value="&#xE143;"/>
    </Style>
    <Style x:Key="KeyboardAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="KeyboardAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Keyboard"/>
        <Setter Property="Content" Value="&#xE144;"/>
    </Style>
    <Style x:Key="DockLeftAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="DockLeftAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Dock Left"/>
        <Setter Property="Content" Value="&#xE145;"/>
    </Style>
    <Style x:Key="DockRightAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="DockRightAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Dock Right"/>
        <Setter Property="Content" Value="&#xE146;"/>
    </Style>
    <Style x:Key="DockBottomAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="DockBottomAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Dock Bottom"/>
        <Setter Property="Content" Value="&#xE147;"/>
    </Style>
    <Style x:Key="RemoteAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="RemoteAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Remote"/>
        <Setter Property="Content" Value="&#xE148;"/>
    </Style>
    <Style x:Key="SyncAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SyncAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Sync"/>
        <Setter Property="Content" Value="&#xE149;"/>
    </Style>
    <Style x:Key="RotateAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="RotateAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Rotate"/>
        <Setter Property="Content" Value="&#xE14A;"/>
    </Style>
    <Style x:Key="ShuffleAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ShuffleAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Shuffle"/>
        <Setter Property="Content" Value="&#xE14B;"/>
    </Style>
    <Style x:Key="ListAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ListAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="List"/>
        <Setter Property="Content" Value="&#xE14C;"/>
    </Style>
    <Style x:Key="ShopAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ShopAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Shop"/>
        <Setter Property="Content" Value="&#xE14D;"/>
    </Style>
    <Style x:Key="SelectAllAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SelectAllAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Select All"/>
        <Setter Property="Content" Value="&#xE14E;"/>
    </Style>
    <Style x:Key="OrientationAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="OrientationAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Orientation"/>
        <Setter Property="Content" Value="&#xE14F;"/>
    </Style>
    <Style x:Key="ImportAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ImportAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Import"/>
        <Setter Property="Content" Value="&#xE150;"/>
    </Style>
    <Style x:Key="ImportAllAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ImportAllAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Import All"/>
        <Setter Property="Content" Value="&#xE151;"/>
    </Style>
    <Style x:Key="BrowsePhotosAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="BrowsePhotosAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Browse Photos"/>
        <Setter Property="Content" Value="&#xE155;"/>
    </Style>
    <Style x:Key="WebcamAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="WebcamAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Webcam"/>
        <Setter Property="Content" Value="&#xE156;"/>
    </Style>
    -->

    <!--
    <Style x:Key="PicturesAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PicturesAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Pictures"/>
        <Setter Property="Content" Value="&#xE158;"/>
    </Style>
    <Style x:Key="SaveLocalAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SaveLocalAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Save Local"/>
        <Setter Property="Content" Value="&#xE159;"/>
    </Style>
    <Style x:Key="CaptionAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="CaptionAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Caption"/>
        <Setter Property="Content" Value="&#xE15A;"/>
    </Style>
    <Style x:Key="StopAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="StopAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Stop"/>
        <Setter Property="Content" Value="&#xE15B;"/>
    </Style>
    <Style x:Key="ShowResultsAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ShowResultsAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Show Results"/>
        <Setter Property="Content" Value="&#xE15C;"/>
    </Style>
    <Style x:Key="VolumeAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="VolumeAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Volume"/>
        <Setter Property="Content" Value="&#xE15D;"/>
    </Style>
    <Style x:Key="RepairAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="RepairAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Repair"/>
        <Setter Property="Content" Value="&#xE15E;"/>
    </Style>
    <Style x:Key="MessageAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="MessageAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Message"/>
        <Setter Property="Content" Value="&#xE15F;"/>
    </Style>
    <Style x:Key="Page2AppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="Page2AppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Page2"/>
        <Setter Property="Content" Value="&#xE160;"/>
    </Style>
    <Style x:Key="CalendarDayAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="CalendarDayAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Day"/>
        <Setter Property="Content" Value="&#xE161;"/>
    </Style>
    <Style x:Key="CalendarWeekAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="CalendarWeekAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Week"/>
        <Setter Property="Content" Value="&#xE162;"/>
    </Style>
    <Style x:Key="CalendarAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="CalendarAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Calendar"/>
        <Setter Property="Content" Value="&#xE163;"/>
    </Style>
    <Style x:Key="CharactersAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="CharactersAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Characters"/>
        <Setter Property="Content" Value="&#xE164;"/>
    </Style>
    <Style x:Key="MailReplyAllAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="MailReplyAllAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Reply All"/>
        <Setter Property="Content" Value="&#xE165;"/>
    </Style>
    <Style x:Key="ReadAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ReadAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Read"/>
        <Setter Property="Content" Value="&#xE166;"/>
    </Style>
    <Style x:Key="LinkAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="LinkAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Link"/>
        <Setter Property="Content" Value="&#xE167;"/>
    </Style>
    <Style x:Key="AccountsAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="AccountsAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Accounts"/>
        <Setter Property="Content" Value="&#xE168;"/>
    </Style>
    <Style x:Key="ShowBccAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ShowBccAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Show Bcc"/>
        <Setter Property="Content" Value="&#xE169;"/>
    </Style>
    <Style x:Key="HideBccAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="HideBccAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Hide Bcc"/>
        <Setter Property="Content" Value="&#xE16A;"/>
    </Style>
    -->

    <!--
    <Style x:Key="CutAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="CutAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Cut"/>
        <Setter Property="Content" Value="&#xE16B;"/>
    </Style>
    <Style x:Key="AttachAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="AttachAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Attach"/>
        <Setter Property="Content" Value="&#xE16C;"/>
    </Style>
    <Style x:Key="PasteAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PasteAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Paste"/>
        <Setter Property="Content" Value="&#xE16D;"/>
    </Style>
    <Style x:Key="FilterAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="FilterAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Filter"/>
        <Setter Property="Content" Value="&#xE16E;"/>
    </Style>
    <Style x:Key="CopyAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="CopyAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Copy"/>
        <Setter Property="Content" Value="&#xE16F;"/>
    </Style>
    <Style x:Key="Emoji2AppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="Emoji2AppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Emoji2"/>
        <Setter Property="Content" Value="&#xE170;"/>
    </Style>
    <Style x:Key="ImportantAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ImportantAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Important"/>
        <Setter Property="Content" Value="&#xE171;"/>
    </Style>
    <Style x:Key="MailReplyAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="MailReplyAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Reply"/>
        <Setter Property="Content" Value="&#xE172;"/>
    </Style>
    <Style x:Key="SlideShowAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SlideShowAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Slideshow"/>
        <Setter Property="Content" Value="&#xE173;"/>
    </Style>
    <Style x:Key="SortAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SortAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Sort"/>
        <Setter Property="Content" Value="&#xE174;"/>
    </Style>
    <Style x:Key="ManageAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ManageAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Manage"/>
        <Setter Property="Content" Value="&#xE178;"/>
    </Style>
    <Style x:Key="AllAppsAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="AllAppsAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="All Apps"/>
        <Setter Property="Content" Value="&#xE179;"/>
    </Style>
    <Style x:Key="DisconnectDriveAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="DisconnectDriveAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Disconnect Drive"/>
        <Setter Property="Content" Value="&#xE17A;"/>
    </Style>
    <Style x:Key="MapDriveAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="MapDriveAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Map Drive"/>
        <Setter Property="Content" Value="&#xE17B;"/>
    </Style>
    <Style x:Key="NewWindowAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="NewWindowAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="New Window"/>
        <Setter Property="Content" Value="&#xE17C;"/>
    </Style>
    <Style x:Key="OpenWithAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="OpenWithAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Open With"/>
        <Setter Property="Content" Value="&#xE17D;"/>
    </Style>
    <Style x:Key="ContactPresenceAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ContactPresenceAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Presence"/>
        <Setter Property="Content" Value="&#xE181;"/>
    </Style>
    <Style x:Key="PriorityAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PriorityAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Priority"/>
        <Setter Property="Content" Value="&#xE182;"/>
    </Style>
    <Style x:Key="UploadSkyDriveAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="UploadSkyDriveAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Skydrive"/>
        <Setter Property="Content" Value="&#xE183;"/>
    </Style>
    <Style x:Key="GoToTodayAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="GoToTodayAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Today"/>
        <Setter Property="Content" Value="&#xE184;"/>
    </Style>
    <Style x:Key="FontAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="FontAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Font"/>
        <Setter Property="Content" Value="&#xE185;"/>
    </Style>

    -->

    <!--

    <Style x:Key="FontColorAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="FontColorAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Font Color"/>
        <Setter Property="Content" Value="&#xE186;"/>
    </Style>
    <Style x:Key="Contact2AppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="Contact2AppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Contact"/>
        <Setter Property="Content" Value="&#xE187;"/>
    </Style>
    <Style x:Key="FolderppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="FolderAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Folder"/>
        <Setter Property="Content" Value="&#xE188;"/>
    </Style>
    <Style x:Key="AudioAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="AudioAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Audio"/>
        <Setter Property="Content" Value="&#xE189;"/>
    </Style>
    <Style x:Key="PlaceholderAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PlaceholderAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Placeholder"/>
        <Setter Property="Content" Value="&#xE18A;"/>
    </Style>
    <Style x:Key="ViewAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ViewAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="View"/>
        <Setter Property="Content" Value="&#xE18B;"/>
    </Style>
    <Style x:Key="SetLockScreenAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SetLockscreenAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Set Lockscreen"/>
        <Setter Property="Content" Value="&#xE18C;"/>
    </Style>
    <Style x:Key="SetTitleAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SetTitleAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Set Title"/>
        <Setter Property="Content" Value="&#xE18D;"/>
    </Style>
    <Style x:Key="CcAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="CcAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Cc"/>
        <Setter Property="Content" Value="&#xE190;"/>
    </Style>
    <Style x:Key="StopSlideShowAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="StopSlideshowAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Stop Slideshow"/>
        <Setter Property="Content" Value="&#xE191;"/>
    </Style>
    <Style x:Key="PermissionsAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PermissionsAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Permisions"/>
        <Setter Property="Content" Value="&#xE192;"/>
    </Style>
    <Style x:Key="HighlightAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="HighlightAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Highlight"/>
        <Setter Property="Content" Value="&#xE193;"/>
    </Style>
    <Style x:Key="DisableUpdatesAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="DisableUpdatesAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Disable Updates"/>
        <Setter Property="Content" Value="&#xE194;"/>
    </Style>
    <Style x:Key="UnfavoriteAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="UnfavoriteAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Unfavorite"/>
        <Setter Property="Content" Value="&#xE195;"/>
    </Style>
    <Style x:Key="UnPinAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="UnPinAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Unpin"/>
        <Setter Property="Content" Value="&#xE196;"/>
    </Style>
    <Style x:Key="OpenLocalAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="OpenLocalAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Open Loal"/>
        <Setter Property="Content" Value="&#xE197;"/>
    </Style>
    <Style x:Key="MuteAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="MuteAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Mute"/>
        <Setter Property="Content" Value="&#xE198;"/>
    </Style>
    <Style x:Key="ItalicAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ItalicAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Italic"/>
        <Setter Property="Content" Value="&#xE199;"/>
    </Style>
    -->

    <!--
    <Style x:Key="UnderlineAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="UnderlineAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Underline"/>
        <Setter Property="Content" Value="&#xE19A;"/>
    </Style>
    <Style x:Key="BoldAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="BoldAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Bold"/>
        <Setter Property="Content" Value="&#xE19B;"/>
    </Style>
    <Style x:Key="MoveToFolderAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="MoveToFolderAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Move to Folder"/>
        <Setter Property="Content" Value="&#xE19C;"/>
    </Style>
    <Style x:Key="LikeDislikeAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="LikeDislikeAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Like/Dislike"/>
        <Setter Property="Content" Value="&#xE19D;"/>
    </Style>
    <Style x:Key="DislikeAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="DislikeAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Dislike"/>
        <Setter Property="Content" Value="&#xE19E;"/>
    </Style>
    <Style x:Key="LikeAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="LikeAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Like"/>
        <Setter Property="Content" Value="&#xE19F;"/>
    </Style>
    <Style x:Key="AlignRightAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="AlignRightAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Align Right"/>
        <Setter Property="Content" Value="&#xE1A0;"/>
    </Style>
    <Style x:Key="AlignCenterAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="AlignCenterAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Align Center"/>
        <Setter Property="Content" Value="&#xE1A1;"/>
    </Style>
    <Style x:Key="AlignLeftAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="AlignLeftAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Align Left"/>
        <Setter Property="Content" Value="&#xE1A2;"/>
    </Style>
    <Style x:Key="ZoomAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ZoomAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Zoom"/>
        <Setter Property="Content" Value="&#xE1A3;"/>
    </Style>
    <Style x:Key="ZoomOutAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ZoomOutAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Zoom Out"/>
        <Setter Property="Content" Value="&#xE1A4;"/>
    </Style>
    <Style x:Key="OpenFileAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="OpenFileAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Open File"/>
        <Setter Property="Content" Value="&#xE1A5;"/>
    </Style>
    <Style x:Key="OtherUserAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="OtherUserAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Other User"/>
        <Setter Property="Content" Value="&#xE1A6;"/>
    </Style>
    <Style x:Key="AdminAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="AdminAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Admin"/>
        <Setter Property="Content" Value="&#xE1A6;"/>
    </Style>
    <Style x:Key="StreetAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="StreetAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Street"/>
        <Setter Property="Content" Value="&#xE1C3;"/>
    </Style>
    <Style x:Key="MapAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="MapAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Map"/>
        <Setter Property="Content" Value="&#xE1C4;"/>
    </Style>-->
    <Style x:Key="ClearSelectionAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ClearSelectionAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Clear Selection"/>
        <Setter Property="Content" Value="&#xE1C5;"/>
    </Style>
    <Style x:Key="DiceRollAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ClearSelectionAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Clear Selection"/>
        <Setter Property="Content" Value="M23.52215,43.831001C21.940231,43.831001 20.658998,45.113468 20.658998,46.69425 20.658998,48.276333 21.940231,49.559 23.52215,49.559 25.104065,49.559 26.385998,48.276333 26.385998,46.69425 26.385998,45.113468 25.104065,43.831001 23.52215,43.831001z M6.7498002,43.830999C5.1678162,43.830999 3.8859999,45.113466 3.8859999,46.694248 3.8859999,48.276331 5.1678162,49.558996 6.7498002,49.558996 8.3317451,49.558996 9.6130009,48.276331 9.6130009,46.694248 9.6130009,45.113466 8.3317451,43.830999 6.7498002,43.830999z M15.340549,35.65C13.758356,35.65 12.477,36.932589 12.477,38.513499 12.477,40.094309 13.758356,41.376997 15.340549,41.376997 16.922842,41.376997 18.204998,40.094309 18.204998,38.513499 18.204998,36.932589 16.922842,35.65 15.340549,35.65z M40.468952,28.196C38.887089,28.196 37.606003,29.47832 37.606003,31.0589 37.606003,32.639379 38.887089,33.923001 40.468952,33.923001 42.050915,33.923001 43.332001,32.639379 43.332001,31.0589 43.332001,29.47832 42.050915,28.196 40.468952,28.196z M23.522148,27.196001C21.940231,27.196001 20.658998,28.478365 20.658998,30.059 20.658998,31.639532 21.940231,32.921998 23.522148,32.921998 25.104067,32.921998 26.386,31.639532 26.386,30.059 26.386,28.478365 25.104067,27.196001 23.522148,27.196001z M6.7498002,27.196001C5.1678162,27.196001 3.8859999,28.478365 3.8859999,30.059 3.8859999,31.639532 5.1678162,32.921998 6.7498002,32.921998 8.3317451,32.921998 9.6130009,31.639532 9.6130009,30.059 9.6130009,28.478365 8.3317451,27.196001 6.7498002,27.196001z M3.2728603,23.104L27.545166,23.104C29.353184,23.104,30.817999,24.569039,30.817999,26.376288L30.817999,50.104712C30.817999,51.91206,29.353184,53.376999,27.545166,53.376999L3.2728603,53.376999C1.4648635,53.376999,0,51.91206,0,50.104712L0,26.376288C0,24.569039,1.4648635,23.104,3.2728603,23.104z M40.468952,17.286C38.887089,17.286 37.606003,18.568322 37.606003,20.1501 37.606003,21.730679 38.887089,23.012999 40.468952,23.013 42.050915,23.012999 43.332001,21.730679 43.332001,20.1501 43.332001,18.568322 42.050915,17.286 40.468952,17.286z M40.468948,7.2410002C38.887089,7.2410011 37.606003,8.523653 37.606003,10.104425 37.606003,11.685377 38.887089,12.968 40.468948,12.968 42.050911,12.968 43.332001,11.685377 43.332001,10.104425 43.332001,8.523653 42.050911,7.2410011 40.468948,7.2410002z M40.775803,0.00044441223C41.665718,-0.014169693,42.558392,0.33234406,43.216248,1.0323658L59.840096,18.718661C61.078407,20.033662,61.013412,22.105262,59.695591,23.343564L42.407635,39.593569C41.089817,40.830767,39.019485,40.766768,37.781166,39.449068L34.088997,35.520806 34.088997,26.376407C34.088997,22.766948,31.153522,19.832,27.544752,19.831999L20.287712,19.831999 20.276829,19.735528C20.216105,18.79461,20.560606,17.834404,21.301823,17.13786L38.589779,0.88783455C39.207508,0.30739021,39.990582,0.013339996,40.775803,0.00044441223z" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                     <Path 
                         Data="{Binding Path=Content, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                         Stretch="Uniform" 
                         Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                         Width="26" 
                         Height="26" 
                         RenderTransformOrigin="0.5,0.5">
                        
                    </Path>
                </DataTemplate>
               
            </Setter.Value>
            
        </Setter> 
    </Style>
    <Style x:Key="MagicRollAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ClearSelectionAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Clear Selection"/>
        <Setter Property="Content" Value="M40.110691,17.336001L43.787209,19.603006 47.739838,17.851579 46.722206,22.052104 49.609001,25.26417 45.300961,25.597356 43.13229,29.337 41.485435,25.338367 37.260998,24.432104 40.553104,21.631422z M30.316431,15.311499C30.737907,15.3207,31.141415,15.45716,31.470024,15.730532L33.818306,17.694105C34.694302,18.424594,34.7043,19.856977,33.841408,20.888161L6.1638265,54.03081C5.2956729,55.0699,3.888453,55.316195,3.0118785,54.583106L0.66258836,52.621932C-0.21271044,51.889041,-0.22314736,50.462062,0.64531529,49.424178L28.322847,16.281325C28.861591,15.634333,29.61397,15.296166,30.316431,15.311499z M17.982637,0.28100014L22.582518,3.1118908 27.524708,0.93214035 26.253859,6.1756935 29.865,10.203163 24.47509,10.621074 21.760185,15.288001 19.702805,10.298364 14.42,9.1577039 18.53216,5.6602993z M37.014431,0L40.23534,1.97754 43.692245,0.45019531 42.80167,4.1220703 45.327003,6.9426298 41.552406,7.2316895 39.658558,10.5 38.221096,7.0024395 34.521999,6.2094698 37.39922,3.7629395z" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Path 
                         Data="{Binding Path=Content, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                         Stretch="Uniform" 
                         Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                         Width="26" 
                         Height="26" 
                         RenderTransformOrigin="0.5,0.5">

                    </Path>
                </DataTemplate>

            </Setter.Value>

        </Setter>
    </Style>
    <Style x:Key="ManualRollAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ClearSelectionAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Clear Selection"/>
        <Setter Property="Content" Value="M15.981499,13.747002C18.05169,13.747002,19.73,15.426697,19.73,17.496992L19.73,29.981703 19.779463,29.852098C20.305013,28.579597 21.683165,27.672002 23.300499,27.672002 25.370689,27.672002 27.049,29.159006 27.049,30.994911L27.049,32.286549 27.098465,32.167931C27.624022,31.003298 29.002193,30.172002 30.619551,30.172002 32.689867,30.172002 34.368,31.533998 34.368,33.213693L34.368,42.065532 34.802896,37.581322C34.973396,35.815634 36.543791,34.521343 38.310686,34.693342 40.076281,34.862541 41.370577,36.435431 41.198677,38.201019L39.531998,55.4002 39.531998,56.770905C39.531998,60.763145,36.295256,64,32.301731,64L19.449066,64C16.080709,64,13.24998,61.695639,12.447613,58.577476L12.385349,58.30774 2.4728718,41.726652C1.7229061,40.474153 2.3947554,38.692953 3.9740238,37.750153 5.5534835,36.807454 7.4387784,37.057454 8.1887436,38.310053L12.233,45.075792 12.233,17.496992C12.232999,15.426697,13.91121,13.747002,15.981499,13.747002z M2.4651451,5.512001C3.0964394,5.512001,3.7279081,5.7528877,4.2096834,6.2346535L8.3473825,10.372528C9.3108721,11.336092 9.3108721,12.895937 8.3473825,13.859404 7.3840122,14.822868 5.821506,14.822868 4.8593559,13.859404L0.7216568,9.7214584C-0.2405529,8.7580528 -0.2405529,7.1982384 0.7216568,6.2346535 1.2027321,5.7528877 1.8338509,5.512001 2.4651451,5.512001z M29.787703,5.512001C30.419058,5.512001 31.050566,5.7528877 31.532339,6.2346535 32.495886,7.1982384 32.495886,8.7580528 31.532339,9.7214584L27.394133,13.859404C26.430585,14.822868 24.869307,14.822868 23.905759,13.859404 22.943411,12.895937 22.943411,11.336092 23.905759,10.372528L28.043965,6.2346535C28.525139,5.7528877,29.156345,5.512001,29.787703,5.512001z M16.182049,0C17.543967,0,18.648,1.1041412,18.647999,2.466156L18.647999,8.3178291C18.648,9.6823425 17.543967,10.784 16.182049,10.784 14.820132,10.784 13.715999,9.6823425 13.716,8.3178291L13.716,2.466156C13.715999,1.1041412,14.820132,0,16.182049,0z" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Path 
                         Data="{Binding Path=Content, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                         Stretch="Uniform" 
                         Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                         Width="26" 
                         Height="26" 
                         RenderTransformOrigin="0.5,0.5">

                    </Path>
                </DataTemplate>

            </Setter.Value>

        </Setter>
    </Style>
    <Style x:Key="ResetRollAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ClearSelectionAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Clear Selection"/>
        <Setter Property="Content" Value="F1M476.992,336.992C476.752,335.393 476.339,333.403 475.591,331.255 475.029,329.646 474.28,327.946 473.251,326.271 471.716,323.767 469.522,321.298 466.49,319.493 463.467,317.679 459.662,316.603 455.249,316.613 452.634,316.613 450.235,316.979 448.081,317.667 446.199,318.265 444.507,319.109 443.031,320.119 440.442,321.887 438.537,324.133 437.164,326.409 435.102,329.836 434.16,333.331 433.67,335.999 433.19,338.669 433.184,340.532 433.184,340.722L433.184,355.752 423.21,355.752 437.566,380.612 451.921,355.752 441.95,355.752 441.95,340.739C441.95,340.739 441.95,340.678 441.956,340.551 441.974,340.081 442.052,338.764 442.382,337.123 442.626,335.891 443.011,334.477 443.58,333.104 444.009,332.074 444.539,331.069 445.179,330.156 446.146,328.792 447.326,327.648 448.882,326.805 450.448,325.969 452.438,325.385 455.249,325.377 457.053,325.379 458.524,325.629 459.756,326.021 460.832,326.364 461.733,326.819 462.524,327.358 463.904,328.303 464.975,329.53 465.834,330.947 467.12,333.059 467.85,335.587 468.201,337.556 468.378,338.538 468.466,339.379 468.51,339.949 468.531,340.23 468.541,340.449 468.546,340.584L468.549,340.721 468.549,340.722 468.549,380.612 477.317,380.612 477.317,340.722C477.317,340.557,477.309,339.122,476.992,336.992z" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Path 
                         Data="{Binding Path=Content, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                         Stretch="Uniform" 
                         Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                         Width="26" 
                         Height="26" 
                         RenderTransformOrigin="0.5,0.5">

                    </Path>
                </DataTemplate>

            </Setter.Value>

        </Setter>
    </Style>
    <!--<Style x:Key="FontDecreaseAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="FontDecreaseAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Decrease Font"/>
        <Setter Property="Content" Value="&#xE1C6;"/>
    </Style>
    <Style x:Key="FontIncreaseAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="FontIncreaseAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Increase Font"/>
        <Setter Property="Content" Value="&#xE1C7;"/>
    </Style>
    <Style x:Key="FontSizeAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="FontSizeAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Font Size"/>
        <Setter Property="Content" Value="&#xE1C8;"/>
    </Style>
    -->

    <!--
    <Style x:Key="CellphoneAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="CellphoneAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Cellphone"/>
        <Setter Property="Content" Value="&#xE1C9;"/>
    </Style>
    <Style x:Key="ReshareAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ReshareAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Reshare"/>
        <Setter Property="Content" Value="&#xE1CA;"/>
    </Style>
    <Style x:Key="TagAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="TagAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Tag"/>
        <Setter Property="Content" Value="&#xE1CB;"/>
    </Style>
    <Style x:Key="RepeatOneAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="RepeatOneAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Repeat Once"/>
        <Setter Property="Content" Value="&#xE1CC;"/>
    </Style>
    <Style x:Key="RepeatAllAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="RepeatAllAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Repeat All"/>
        <Setter Property="Content" Value="&#xE1CD;"/>
    </Style>
    <Style x:Key="OutlineStarAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="OutlineStarAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Outline Star"/>
        <Setter Property="Content" Value="&#xE1CE;"/>
    </Style>
    <Style x:Key="SolidStarAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SolidStarAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Solid Star"/>
        <Setter Property="Content" Value="&#xE1CF;"/>
    </Style>
    <Style x:Key="CalculatorAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="CalculatorAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Calculator"/>
        <Setter Property="Content" Value="&#xE1D0;"/>
    </Style>
    <Style x:Key="DirectionsAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="DirectionsAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Directions"/>
        <Setter Property="Content" Value="&#xE1D1;"/>
    </Style>
    <Style x:Key="TargetAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="TargetAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Target"/>
        <Setter Property="Content" Value="&#xE1D2;"/>
    </Style>
    <Style x:Key="LibraryAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="LibraryAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Library"/>
        <Setter Property="Content" Value="&#xE1D3;"/>
    </Style>
    <Style x:Key="PhonebookAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PhonebookAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Phonebook"/>
        <Setter Property="Content" Value="&#xE1D4;"/>
    </Style>
    <Style x:Key="MemoAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="MemoAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Memo"/>
        <Setter Property="Content" Value="&#xE1D5;"/>
    </Style>
    <Style x:Key="MicrophoneAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="MicrophoneAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Microphone"/>
        <Setter Property="Content" Value="&#xE1D6;"/>
    </Style>
    <Style x:Key="PostUpdateAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PostUpdateAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Post Update"/>
        <Setter Property="Content" Value="&#xE1D7;"/>
    </Style>
    <Style x:Key="BackToWindowAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="BackToWindowAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Back to Window"/>
        <Setter Property="Content" Value="&#xE1D8;"/>
    </Style>
    -->

    <!--
    <Style x:Key="FullScreenAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="FullScreenAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Full Screen"/>
        <Setter Property="Content" Value="&#xE1D9;"/>
    </Style>
    <Style x:Key="NewFolderAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="NewFolderAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="New Folder"/>
        <Setter Property="Content" Value="&#xE1DA;"/>
    </Style>
    <Style x:Key="CalendarReplyAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="CalendarReplyAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Calendar Reply"/>
        <Setter Property="Content" Value="&#xE1DB;"/>
    </Style>
    <Style x:Key="UnsyncFolderAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="UnsyncFolderAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Unsync Folder"/>
        <Setter Property="Content" Value="&#xE1DD;"/>
    </Style>
    <Style x:Key="ReportHackedAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ReportHackedAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Report Hacked"/>
        <Setter Property="Content" Value="&#xE1DE;"/>
    </Style>
    <Style x:Key="SyncFolderAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SyncFolderAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Sync Folder"/>
        <Setter Property="Content" Value="&#xE1DF;"/>
    </Style>
    <Style x:Key="BlockContactAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="Block ContactAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="BlockContact"/>
        <Setter Property="Content" Value="&#xE1E0;"/>
    </Style>
    <Style x:Key="SwitchAppsAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SwitchAppsAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Switch Apps"/>
        <Setter Property="Content" Value="&#xE1E1;"/>
    </Style>
    <Style x:Key="AddFriendAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="AddFriendAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Add Friend"/>
        <Setter Property="Content" Value="&#xE1E2;"/>
    </Style>
    <Style x:Key="TouchPointerAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="TouchPointerAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Touch Pointer"/>
        <Setter Property="Content" Value="&#xE1E3;"/>
    </Style>
    <Style x:Key="GoToStartAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="GoToStartAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Go to Start"/>
        <Setter Property="Content" Value="&#xE1E4;"/>
    </Style>
    <Style x:Key="ZeroBarsAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ZeroBarsAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Zero Bars"/>
        <Setter Property="Content" Value="&#xE1E5;"/>
    </Style>
    <Style x:Key="OneBarAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="OneBarAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="One Bar"/>
        <Setter Property="Content" Value="&#xE1E6;"/>
    </Style>
    <Style x:Key="TwoBarsAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="TwoBarsAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Two Bars"/>
        <Setter Property="Content" Value="&#xE1E7;"/>
    </Style>
    <Style x:Key="ThreeBarsAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="ThreeBarsAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Three Bars"/>
        <Setter Property="Content" Value="&#xE1E8;"/>
    </Style>
    <Style x:Key="FourBarsAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="FourBarsAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Four Bars"/>
        <Setter Property="Content" Value="&#xE1E9;"/>
    </Style>

    -->

    <Style x:Key="SettingsTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <!--ToggleButtons for settings page-->
    <Style x:Key="SettingsToggleStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource SanetBlue}"/>
        <Setter Property="Opacity" Value="0.85"/>
        <Setter Property="Width" Value="180"/>
        <Setter Property="Height" Value="90"/>
        <Setter Property="FontSize" Value="35"/>
        <Setter Property="Margin" Value="20"/>
    </Style>
    <!-- Title area styles -->

    <Style x:Key="PageHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource HeaderTextStyle}">
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="0,0,30,40"/>
    </Style>

    <Style x:Key="PageSubheaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource SubheaderTextStyle}">
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="0,0,0,40"/>
    </Style>

    <Style x:Key="SnappedPageHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource PageSubheaderTextStyle}">
        <Setter Property="Margin" Value="0,0,18,40"/>
    </Style>

    <!--
        BackButtonStyle is used to style a Button for use in the title area of a page.  Margins appropriate for
        the conventional page layout are included as part of the style.
    -->
    <Style x:Key="BackButtonStyle" TargetType="Button">
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Width" Value="48"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Margin" Value="36,18,36,18"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="56"/>
        <Setter Property="AutomationProperties.AutomationId" Value="BackButton"/>
        <Setter Property="AutomationProperties.Name" Value="Back"/>
        <Setter Property="AutomationProperties.ItemType" Value="Navigation Button"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid">
                        <Grid Margin="-1,-16,0,0">
                            <TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" Foreground="{StaticResource BackButtonBackgroundThemeBrush}"/>
                            <TextBlock x:Name="NormalGlyph" Text="{StaticResource BackButtonGlyph}" Foreground="{StaticResource BackButtonForegroundThemeBrush}"/>
                            <TextBlock x:Name="ArrowGlyph" Text="&#xE0A6;" Foreground="{StaticResource BackButtonPressedForegroundThemeBrush}" Opacity="0"/>
                        </Grid>
                        <Rectangle
                            x:Name="FocusVisualWhite"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="1.5"/>
                        <Rectangle
                            x:Name="FocusVisualBlack"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="0.5"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonPointerOverForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ArrowGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualWhite"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualBlack"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
        PortraitBackButtonStyle is used to style a Button for use in the title area of a portrait page.  Margins appropriate
        for the conventional page layout are included as part of the style.
    -->
    <Style x:Key="PortraitBackButtonStyle" TargetType="Button" BasedOn="{StaticResource BackButtonStyle}">
        <Setter Property="Margin" Value="26,0,26,36"/>
    </Style>

    <!--
        SnappedBackButtonStyle is used to style a Button for use in the title area of a snapped page.  Margins appropriate
        for the conventional page layout are included as part of the style.
        
        The obvious duplication here is necessary as the glyphs used in snapped are not merely smaller versions of the same
        glyph but are actually distinct.
    -->
    <Style x:Key="SnappedBackButtonStyle" TargetType="Button">
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="26.66667"/>
        <Setter Property="AutomationProperties.AutomationId" Value="BackButton"/>
        <Setter Property="AutomationProperties.Name" Value="Back"/>
        <Setter Property="AutomationProperties.ItemType" Value="Navigation Button"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Width="36" Height="36" Margin="-3,0,7,0">
                        <Grid Margin="-1,-1,0,0">
                            <TextBlock x:Name="BackgroundGlyph" Text="&#xE0D4;" Foreground="{StaticResource BackButtonBackgroundThemeBrush}"/>
                            <TextBlock x:Name="NormalGlyph" Text="{StaticResource BackButtonSnappedGlyph}" Foreground="{StaticResource BackButtonForegroundThemeBrush}"/>
                            <TextBlock x:Name="ArrowGlyph" Text="&#xE0C4;" Foreground="{StaticResource BackButtonPressedForegroundThemeBrush}" Opacity="0"/>
                        </Grid>
                        <Rectangle
                            x:Name="FocusVisualWhite"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="1.5"/>
                        <Rectangle
                            x:Name="FocusVisualBlack"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="0.5"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonPointerOverForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ArrowGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualWhite"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualBlack"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Item templates -->
    <!--Datatemplate for magical offers-->
    <DataTemplate x:Key="OfferTemplate">
        <Grid
            Visibility="{Binding IsAvailable,Converter={StaticResource VisibilityKey}}"
            Height="110" Margin="10,5" HorizontalAlignment="Stretch"
                          >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid
                            Width="80"
                            Height="80"
                                
                                Background="{StaticResource SanetBlue}">
                <TextBlock Text="{Binding Amount}"
                                       FontSize="35"
                           Margin="10"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Foreground="White"/>
                <TextBlock Text="{Binding Cost}"
                                       
                           Margin="2"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Bottom"
                                       Foreground="White"/>
                
                <Grid
                    Visibility="{Binding HasDiscount,Converter={StaticResource VisibilityKey}}"
                    Height="42" Width="42"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Left"
                    >
                    
                    <Image Source="ms-appx:///Assets/Discount.png"/>
                    <TextBlock Text="{Binding Discount}"
                               FontSize="16" Foreground="Red">
                        <TextBlock.RenderTransform>
                        <RotateTransform Angle="-45" CenterX="20" CenterY="20" />
                    </TextBlock.RenderTransform>
                    </TextBlock>
                </Grid>
                
                
                
            </Grid>
            <StackPanel Grid.Column="1">
                <TextBlock Text="{Binding Label}" Foreground="{StaticResource SanetBlue}" 
                                 FontSize="35" Height="50" Margin="10,5,10,0" />
                <TextBlock Text="{Binding LocalizedDescription}"
                                 FontSize="18"  Margin="10,5"  Style="{StaticResource BlueCommonTextStyle}"/>
            </StackPanel>

        </Grid>
    </DataTemplate>

    <!--Datatemplate for main menu item-->
    <DataTemplate x:Key="MainMenuTemplate">
        <Grid Height="95" Margin="10" HorizontalAlignment="Stretch"
                          >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="95"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Image
                    Height="90"
                    Width="90"
                    Source="{Binding Image}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                    />
            <StackPanel Grid.Column="1">
                <TextBlock Text="{Binding LocalizedLabel}" Foreground="{StaticResource SanetBlue}" 
                                 FontSize="35" Height="50" Margin="10,5,10,0" />
                <TextBlock Text="{Binding LocalizedDescription}" Foreground="{StaticResource SanetBlue}" 
                                 FontSize="15" Height="50" Margin="10,5" />
            </StackPanel>

        </Grid>
    </DataTemplate>

    <!--Datatemplate for actions in main page top menu-->
    <DataTemplate x:Key="SecondaryMenuTemplate">
        <Grid Height="70" Margin="5,0" HorizontalAlignment="Stretch"
                          >
            
            <Image
                    Height="48"
                    Width="48"
                    Source="{Binding Image}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                    />
            
        </Grid>
    </DataTemplate>

    <!--Datatemplate for main menu item-->
    <DataTemplate x:Key="RuleTemplate">
        <Grid Height="100" Margin="5" HorizontalAlignment="Stretch"
                          ><!--Opacity="0.85" Background="{StaticResource SanetBlue}"--> 
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="125"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <!--<Image
                    Height="120"
                    Width="120"
                    Source="{Binding Image}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                    />-->
            <Controls:RotatingPanel
                x:Name="RulePanel" Width="100" Height="100" Background="Blue"
                                    Margin="5,0">
                <Grid Height="100"
                    Width="100"
                      Visibility="{Binding IsFace,ElementName=RulePanel,Converter={StaticResource ReversedVisibilityKey}}"
                  Background="{StaticResource SanetBlue}"
                  >
                    <TextBlock Text="{Binding BestWeekScoreLabel}"
                           VerticalAlignment="Top" Margin="2"
                           TextWrapping="Wrap"
                           Foreground="White"/>
                    <TextBlock Text="{Binding BestWeekScore}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Right"
                           Foreground="White"
                           Margin="2"
                           FontSize="30"/>
                    <TextBlock Text="{Binding BestWeekScorePlayer}"
                           VerticalAlignment="Bottom" Margin="2"
                               MaxHeight="40" TextTrimming="WordEllipsis"
                           Foreground="White" TextWrapping="Wrap"
                           />
                    <ProgressRing HorizontalAlignment="Center"
                              VerticalAlignment="Center" 
                              Foreground="White"
                              IsActive="{Binding IsWeekScoreLoading}"/>
                </Grid>

                <Grid Height="100"
                    Width="100"
                      Visibility="{Binding IsFace,ElementName=RulePanel,Converter={StaticResource VisibilityKey}}"
                  Background="{StaticResource SanetBlue}"
                  >
                    <TextBlock Text="{Binding BestDayScoreLabel}"
                           VerticalAlignment="Top" Margin="2"
                           TextWrapping="Wrap"
                           Foreground="White"/>
                    <TextBlock Text="{Binding BestDayScore}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Right"
                           Foreground="White"
                           Margin="2"
                           FontSize="30"/>
                    <TextBlock Text="{Binding BestDayScorePlayer}"
                           VerticalAlignment="Bottom" Margin="2"
                                MaxHeight="40" TextTrimming="WordEllipsis"
                           Foreground="White" TextWrapping="Wrap"
                           />
                    <ProgressRing HorizontalAlignment="Center"
                              VerticalAlignment="Center" 
                              Foreground="White"
                              IsActive="{Binding IsDayScoreLoading}"/>
                </Grid>
            </Controls:RotatingPanel>
            
            <StackPanel Grid.Column="1">
                <TextBlock Text="{Binding NameLocalized}" Foreground="{StaticResource SanetBlue}" 
                                 FontSize="25" Height="30" Margin="10,5,10,0" />
                <TextBlock Text="{Binding ShortDescriptionLocalized}" Foreground="{StaticResource SanetBlue}" 
                                 FontSize="15" Height="70" Margin="10,5" 
                           TextWrapping="Wrap" TextTrimming="WordEllipsis"
                           />
            </StackPanel>

        </Grid>
    </DataTemplate>

    <!--Datatemplate for main menu item-->
    <DataTemplate x:Key="TableTemplate">
        <Grid Height="110" Width="110"
              Background="{StaticResource SanetBlue}"
              Margin="5" HorizontalAlignment="Stretch"
                          >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Text="{Binding Name}"
                       Margin="5" HorizontalAlignment="Left"/>
            <ListView
                Grid.Row="1"
                Margin="5,0,0,0"
                SelectionMode="None"
                IsItemClickEnabled="False"
                ManipulationMode="None"
                ItemsSource="{Binding Players}"
                HorizontalAlignment="Left"
                IsHitTestVisible="False"
                ScrollViewer.HorizontalScrollMode="Disabled"
                ScrollViewer.VerticalScrollMode="Disabled"
                >
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}"
                                   Height="25" Margin="0"
                                   TextAlignment="Left"/>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Width" Value="100"/>
                        <Setter Property="Height" Value="26"/>
                        <Setter Property="Margin"  Value="0"/>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>

        </Grid>
    </DataTemplate>

    <!--Datatemplate for table results-->
    <DataTemplate x:Key="PlayerTableTemplate">
        <Border BorderThickness="2" BorderBrush="{Binding IsMoving, Converter={StaticResource ColorKey}}">
            
            <StackPanel>
                <Border BorderThickness="0,0,0,1" BorderBrush="{StaticResource SanetBlue}">
                    <Grid Height="55" 
                              Width="60"
                              Margin="0" HorizontalAlignment="Stretch"
                              Background="{Binding IsMoving, Converter={StaticResource ColorKey}}"            >
                        <Grid.Resources>
                            <Storyboard x:Name="FlashNameChanged">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="Yellow"/>
                                    <EasingColorKeyFrame KeyTime="0:0:2" Value="White"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <BackEase EasingMode="EaseIn"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <ElasticEase/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.45">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <BackEase EasingMode="EaseIn"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <ElasticEase/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.65">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <BackEase EasingMode="EaseIn"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <ElasticEase/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Name="TurnTimerAnimation">
                                
                                <ColorAnimation Duration="{Binding Duration}" To="Yellow" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="timerShape" d:IsOptimized="True"/>
                                <DoubleAnimation Duration="{Binding Duration}" From="1" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="timerShape" d:IsOptimized="True"/>
                            </Storyboard>
                        </Grid.Resources>
                        <Triggers:Interactions.Triggers>
                            <Triggers:PropertySetTrigger Binding="{Binding IsMyTurn}" RequiredValue="True">
                                <Triggers:ControlStoryboardAction Action="Start" Storyboard="{StaticResource FlashNameChanged}" />
                            </Triggers:PropertySetTrigger>
                            <Triggers:PropertySetTrigger Binding="{Binding IsMyTurn}" RequiredValue="True">
                                <Triggers:ControlStoryboardAction Action="Start" Storyboard="{StaticResource TurnTimerAnimation}" />
                            </Triggers:PropertySetTrigger>

                        </Triggers:Interactions.Triggers>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Image
                            Margin="-5,0,0,0"
                            VerticalAlignment="top"
                            HorizontalAlignment="Left"
                            MaxHeight="35"
                            Source="{Binding ProfilePhoto}"/>
                        
                        <TextBlock
                            Grid.Row="1"
                                  x:Name="textBlock"
                                  Text="{Binding Name}"
                                     HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                       TextTrimming="WordEllipsis"
                                       TextWrapping="Wrap"
                                       TextAlignment="Center"
                            Margin="-5,0"
                            LineHeight="12"
                                       Width="60"
                                     FontSize="12">
                            <TextBlock.RenderTransform>
                                <CompositeTransform/>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <Path x:Name="timerShape" Data="M 0,0 L50,0 L50,5 L0,5z" 
                              Visibility="{Binding IsMyTurn, Converter={StaticResource VisibilityKey}}"
                              VerticalAlignment="Bottom"
                              Fill="YellowGreen"
                              Margin="-10,5,0,-5"
                              Height="5" Stretch="Fill" Stroke="White" StrokeThickness="0" 
                              UseLayoutRounding="False" Width="50" RenderTransformOrigin="0,1">
                                    <Path.RenderTransform>
                                        <CompositeTransform/>
                                    </Path.RenderTransform>
                                </Path>
                        <Image Source="ms-appx:///Assets/check.png"
                               Height="16" 
                               Margin="10,0"
                               Grid.RowSpan="2"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Top"
                               Visibility="{Binding IsReady,Converter={StaticResource VisibilityKey}}"/>
                        
                            </Grid>
                    </Border>
            <ListView
                 Width="60"
                Margin="0" HorizontalAlignment="Stretch"
                    SelectionMode="None"
                    ItemsSource="{Binding Results}"
                    ItemTemplate="{StaticResource PlayerTableItemTemplate}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.VerticalScrollBarVisibility="Disabled"
                    >
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Width" Value="60"/>
                        <Setter Property="Height" Value="33"/>
                        <Setter Property="Margin" Value="0,0,0,-2"/>
                </Style>
                </ListView.ItemContainerStyle>
                
            </ListView>
            <Grid Height="40" 
              Width="60"
              Margin="0" HorizontalAlignment="Stretch"
              >
                <TextBlock Text="{Binding Total}"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                       TextTrimming="WordEllipsis"
                       TextWrapping="Wrap"
                       TextAlignment="Center"
                       Width="50"
                     FontSize="20"/>

            </Grid>
        </StackPanel>
        </Border>
        
        
    </DataTemplate>

    <!--Datatemplate for table results cell-->
    <DataTemplate x:Key="PlayerTableItemTemplate">
        <Border Margin="-5,-2,0,-2"
                BorderThickness="0,0,0,1" BorderBrush="{StaticResource SanetBlue}">
            <Border.Resources>
                <!--Storyboards-->
                <Storyboard x:Name="ValueChanged">
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="backGrid">
                        <EasingColorKeyFrame KeyTime="0" Value="Yellow"/>
                        <EasingColorKeyFrame KeyTime="0:0:2" Value="#009cd6"/>
                    </ColorAnimationUsingKeyFrames>
                    
                </Storyboard>
                
            </Border.Resources>
            <Triggers:Interactions.Triggers>
                <Triggers:PropertySetTrigger Binding="{Binding HasValue}" RequiredValue="True">
                    <Triggers:ControlStoryboardAction Action="Start" Storyboard="{StaticResource ValueChanged}" />
                </Triggers:PropertySetTrigger>
                
            </Triggers:Interactions.Triggers>
            <Grid Height="30"
                  x:Name="backGrid"
              Width="60"
              Margin="0,-2,0,0" HorizontalAlignment="Stretch"
               Background="{Binding HasValue, Converter={StaticResource ColorKey}}">
                <Grid
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch">
                    <TextBlock Text="{Binding Value}" TextAlignment="Center"
                           Width="45" 
                               VerticalAlignment="Center"
                     HorizontalAlignment="Left" 
                     FontSize="16"
                           Visibility="{Binding HasValue,Converter={StaticResource VisibilityKey}}"/>
                    <TextBlock Text="+100" TextAlignment="Center"
                           Width="45" 
                     HorizontalAlignment="Right" 
                               VerticalAlignment="Bottom"
                               Margin="0,0,0,-3"
                     FontSize="10"
                           Visibility="{Binding HasBonus,Converter={StaticResource VisibilityKey}}"/>
                </Grid>
                    
            </Grid> 
            </Border>
           
        </DataTemplate>

    <!--Datatablet for cells in table captions (left side scores names)-->
    <DataTemplate x:Key="PlayerTableCaptionTemplate">
        <Border Margin="0,-2,0,-2"
                BorderThickness="0,0,0,1" BorderBrush="{StaticResource SanetBlue}">
            <Grid Height="30" 
                     Margin="0,-2,0,0" HorizontalAlignment="Stretch"
                >
                <TextBlock Text="{Binding AltText}" TextAlignment="Left"
                           Margin="2,0,0,0" TextTrimming="WordEllipsis"
                           HorizontalAlignment="Left" VerticalAlignment="Center"
                     FontSize="12"
                           />

            </Grid>
        </Border>

    </DataTemplate>

    <!--Player in chat-->
    <DataTemplate x:Key="ChatPlayerTemplate">
        <Grid >

            <TextBlock Margin="10">
                <Run Text="{Binding Name}" />
                <Run Text=" - " />
                <Run Text="{Binding Language}" />
            </TextBlock>


        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="ChatMessageTemplate">
        <Grid >
            <Border
                Grid.RowSpan="2"
                Grid.ColumnSpan="2"
                Background="{StaticResource SanetBlue}"
                Opacity="0.6"
                BorderBrush="{StaticResource SanetBlue}"
                BorderThickness="2"
                Margin="5"/>
            <TextBlock TextWrapping="Wrap"
                       Margin="10"
                       Foreground="#FFFee5ca">
                    <Run Text="{Binding Path=SenderName}" FontWeight="Bold"/>
                    <Run Text=": "/>
                    <Run Text="{Binding Message}"/>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <!--Game result table template-->
    <DataTemplate x:Key="GameResultsTemplate">
        <Grid Width="600" HorizontalAlignment="Stretch"
                >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50*"/>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="50*"/>
            </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Name}" TextAlignment="Left"
                           TextTrimming="WordEllipsis"
                           HorizontalAlignment="Left" VerticalAlignment="Center"
                     FontSize="26"
                           />
            <TextBlock Text="{Binding Total}" TextAlignment="Center"
                       Grid.Column="1"
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                     FontSize="26"/>
            <CheckBox 
                Grid.Column="2"
                Content="{Binding PlayerSaveScoreLabelLocalized}"
                IsChecked="{Binding ShouldSaveResult, Mode=TwoWay}"
                IsEnabled="{Binding CanSaveResult}"/>
        </Grid>
        
    </DataTemplate>
    <!---->
    <DataTemplate x:Key="ResultItemTemplate">
        <Grid Height="90" Width="90" Background="{Binding ScoreType,Converter={StaticResource ScoreKey}}"
              Margin="5,0,0,0">
            <TextBlock
                    Foreground="White"
                VerticalAlignment="Top"
                FontSize="45"
                HorizontalAlignment="Center"
                TextAlignment="Center"
                    Text="{Binding PossibleValue}" TextWrapping="NoWrap"/>
            <Grid VerticalAlignment="Bottom" Background="#7f3c3c3c" Height="35">

                <TextBlock Text="{Binding AltText}" TextWrapping="NoWrap" TextTrimming="WordEllipsis" VerticalAlignment="Center" FontSize="14" />
            </Grid>
        </Grid>
    </DataTemplate>

    <!--Datatemplate for main menu item-->
    <DataTemplate x:Key="NewPlayerTemplate">
        <Grid Height="120" Margin="5" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition Width="80"/>
            </Grid.ColumnDefinitions>
            <Controls:RotatingPanel
                x:Name="NamePanel" Width="100" Height="100" Background="Blue"
                                    Margin="5,0">
                <Grid Background="{StaticResource SanetBlue}" 
                      Visibility="{Binding IsFace,ElementName=NamePanel,Converter={StaticResource VisibilityKey}}">
                    <TextBlock VerticalAlignment="Top"
                                       Margin="2" TextWrapping="Wrap"
                                       Text="{Binding TapToChangeLabel}"/>
                            <TextBlock VerticalAlignment="Bottom"
                                       Margin="2" TextWrapping="Wrap"
                                       Text="{Binding Text,ElementName=nameText}"/>
                  </Grid>

                <Grid Visibility="{Binding IsFace,ElementName=NamePanel,Converter={StaticResource ReversedVisibilityKey}}"
                    Background="{StaticResource SanetBlue}">
                    <TextBlock VerticalAlignment="Top"
                                       Margin="2" TextWrapping="Wrap"
                                       Text="{Binding TapToApplyLabel}"/>
                            <TextBox x:Name="nameText"
                                     VerticalAlignment="Bottom"
                                     Margin="2" Text="{Binding Name, Mode=TwoWay}"
                     Height="30"/>
                 </Grid>
            </Controls:RotatingPanel>
            
            <Controls:RotatingPanel
                Visibility="{Binding IsBotPossible, Converter={StaticResource VisibilityKey}}" 
               x:Name="TypePanel" Width="100" Height="100" Background="Blue" Tag="Type"
                                    Grid.Column="1" IsFace="{Binding IsHuman, Mode=TwoWay}" Margin="5,0" ><!---->
                 <Grid Background="{StaticResource SanetBlue}" 
                      Visibility="{Binding IsFace,ElementName=TypePanel,Converter={StaticResource VisibilityKey}}" >
                            <Image Source="ms-appx:///Assets/User.png"
                                   />
                           <TextBlock VerticalAlignment="Bottom"
                                       Margin="2"
                                       Text="{Binding PlayerHumanLabelLocalized}"/>
                        </Grid>
                    
                <Grid Visibility="{Binding IsFace,ElementName=TypePanel,Converter={StaticResource ReversedVisibilityKey}}"
                            Background="{StaticResource SanetBlue}">
                             <Image Source="ms-appx:///Assets/Desktop.png"
                                    />
                             <TextBlock VerticalAlignment="Bottom"
                                       Margin="2"
                                       Text="{Binding PlayerBotLabelLocalized}"/>
                            
                        </Grid>
                               
            </Controls:RotatingPanel>
            <Controls:RotatingPanel
                x:Name="PassPanel" Width="100" Height="100" Background="Blue"
                IsFace="{Binding IsPasswordReady, Mode=TwoWay}"
                                    Margin="5,0" Grid.Column="2" Visibility="{Binding IsHuman,Converter={StaticResource VisibilityKey}}">
                <Grid Background="{StaticResource SanetBlue}"
                      Visibility="{Binding IsFace,ElementName=PassPanel,Converter={StaticResource VisibilityKey}}">
                    <TextBlock VerticalAlignment="Top"
                                       Margin="2" TextWrapping="Wrap"
                                       Text="{Binding TapToChangeLabel}"/>
                            <TextBlock VerticalAlignment="Bottom"
                                       Margin="2"
                                       Text="{Binding PlayerPasswordLabelLocalized}"/>
                            
                        </Grid>
                      <Grid Visibility="{Binding IsFace,ElementName=PassPanel,Converter={StaticResource ReversedVisibilityKey}}"
                            Background="{StaticResource SanetBlue}">
                          <TextBlock VerticalAlignment="Top"
                                       Margin="2" TextWrapping="Wrap"
                                       Text="{Binding TapToApplyLabel}"/>
                          <StackPanel VerticalAlignment="Bottom">
                              <PasswordBox x:Name="passText" Margin="2" Password="{Binding Password, Mode=TwoWay}"
                     Height="30" IsPasswordRevealButtonEnabled="True"/>
                          <!--<CheckBox IsChecked="{Binding RememberPass, Mode=TwoWay}"
                IsEnabled="{Binding IsHuman}"
                      Content="{Binding PlayerRememberLabelLocalized}"
                      Grid.Column="2" Grid.Row="1"/>-->
                          </StackPanel>
                            
                        </Grid>
                               
            </Controls:RotatingPanel>
            
            <Button
            Margin="5,0"
                 Height="100"
                 Width="100"
                Grid.Column="3"
                 Tapped="Magic_Tap"
                 Visibility="{Binding IsHuman,Converter={StaticResource VisibilityKey}}"
            Style="{StaticResource ImageButtonStyle}"
                HorizontalContentAlignment="Center"
                VerticalAlignment="Center"
                Command="{Binding MagicCommand}">
                     <Grid
                         Height="100"
                 Width="100"
                         Background="{StaticResource SanetBlue}">
                 <TextBlock Text="{Binding ArtifactsInfoMessage}"
                           VerticalAlignment="Top" Margin="2"
                           Foreground="White" TextWrapping="Wrap"
                            Visibility="{Binding HasArtifacts,Converter={StaticResource ReversedVisibilityKey}}"
                           />
                 <Grid
                     VerticalAlignment="Top" Margin="2"
                           Visibility="{Binding HasArtifacts,Converter={StaticResource VisibilityKey}}">
                     <Grid.ColumnDefinitions>
                         <ColumnDefinition/>
                         <ColumnDefinition/>
                         <ColumnDefinition/>
                     </Grid.ColumnDefinitions>
                     <Grid.RowDefinitions>
                         <RowDefinition Height="50"/>
                         <RowDefinition/>
                     </Grid.RowDefinitions>
                     <Image Source="ms-appx:///Assets/MagicWand.png"
                            Width="32"
                            VerticalAlignment="Bottom"/>
                     <Image Source="ms-appx:///Assets/Manual.png"
                            Grid.Column="1"
                            Width="32"
                            VerticalAlignment="Bottom"/>
                     <Image Source="ms-appx:///Assets/ResetRoll.png"
                            Width="32"
                            Grid.Column="2"
                            VerticalAlignment="Bottom"/>
                      <TextBlock Text="{Binding MagicRollsCount}"
                           VerticalAlignment="Bottom" Margin="2"
                                 HorizontalAlignment="Center"
                                 TextAlignment="Center"
                                 Grid.Row="1"
                                 Grid.Column="0"
                           Foreground="White" 
                           />
                      <TextBlock Text="{Binding ManualSetsCount}"
                           VerticalAlignment="Bottom" Margin="2"
                                 HorizontalAlignment="Center"
                                 TextAlignment="Center"
                                 Grid.Row="1"
                                 Grid.Column="1"
                           Foreground="White" 
                           />
                      <TextBlock Text="{Binding RollResetsCount}"
                           VerticalAlignment="Bottom" Margin="2"
                                 HorizontalAlignment="Center"
                                 TextAlignment="Center"
                                 Grid.Row="1"
                                 Grid.Column="2"
                           Foreground="White" 
                           />
                     
                 </Grid>
                 
                <TextBlock Text="{Binding ArtifactsLabelLocalized}"
                           VerticalAlignment="Bottom" Margin="2"
                           Foreground="White" TextWrapping="Wrap"
                           />
            </Grid>
            
            </Button>
            
            <Button  HorizontalAlignment="Left" 
                     VerticalAlignment="Bottom"
                     Grid.Column="4"
                     AutomationProperties.Name="{Binding DeleteLabel}"
                    Visibility="{Binding IsDeleteable, Converter={StaticResource VisibilityKey}}"  
                    Style="{StaticResource DeleteAppBarButtonStyle}"
                            Command="{Binding DeleteCommand}"/>
        </Grid>
       
    </DataTemplate>

    <!--Datatemplate for main menu item-->
    <!--<DataTemplate x:Key="NewOnlinePlayerTemplate">
        <Grid Height="120" Margin="5" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition Width="80"/>
            </Grid.ColumnDefinitions>
            <Controls:RotatingPanel
                              x:Name="ProfilePanel" Width="100" Height="100" Background="Blue" Tag="Type"
                                    Grid.Column="0" IsFace="{Binding IsLocalProfile, Mode=TwoWay}" Margin="5,0" >
                  <Grid Background="{StaticResource SanetBlue}" 
                      Visibility="{Binding IsFace,ElementName=ProfilePanel,Converter={StaticResource ReversedVisibilityKey}}" >
                            <Image Source="ms-appx:///Assets/facebook_tile.png"
                                   Opacity="0.9"/>
                           <TextBlock VerticalAlignment="Bottom"
                                       Margin="2"
                                       Text="Facebook"/>
                        </Grid>
                    
                <Grid Visibility="{Binding IsFace,ElementName=ProfilePanel,Converter={StaticResource VisibilityKey}}"
                            Background="{StaticResource SanetBlue}">
                             <Image Source="ms-appx:///Assets/Desktop.png"
                                    Opacity="0.9"/>
                             <TextBlock VerticalAlignment="Bottom"
                                       Margin="2"
                                       Text="{Binding LocalProfileLabel}"/>
                            
                        </Grid>
                               
            </Controls:RotatingPanel>
            
            <Controls:RotatingPanel
                Visibility="{Binding IsLocalProfile,Converter={StaticResource VisibilityKey}}"
                Grid.Column="1"
                x:Name="NamePanel" Width="100" Height="100" Background="Blue"
                                    Margin="5,0">
                <Grid Background="{StaticResource SanetBlue}" 
                      Visibility="{Binding IsFace,ElementName=NamePanel,Converter={StaticResource VisibilityKey}}">
                    <Border 
                        Background="Red"
                        Opacity="0.8"
                        Visibility="{Binding IsDefaultName,Converter={StaticResource VisibilityKey}}"
                        BorderThickness="2"/>
                    <TextBlock VerticalAlignment="Top"
                                       Margin="2" TextWrapping="Wrap"
                                       Text="{Binding TapToChangeLabel}"/>
                    <TextBlock VerticalAlignment="Bottom"
                                       Margin="2" TextWrapping="Wrap"
                                       Text="{Binding Text,ElementName=nameText}"/>
                </Grid>

                <Grid Visibility="{Binding IsFace,ElementName=NamePanel,Converter={StaticResource ReversedVisibilityKey}}"
                    Background="{StaticResource SanetBlue}">
                    
                    <TextBlock VerticalAlignment="Top"
                                       Margin="2" TextWrapping="Wrap"
                                       Text="{Binding TapToApplyLabel}"/>
                    <TextBox x:Name="nameText"
                                     VerticalAlignment="Bottom"
                                     Margin="2" Text="{Binding Name, Mode=TwoWay}"
                     Height="30"/>
                </Grid>
            </Controls:RotatingPanel>
            <Button
            Margin="5,0"
                 Height="100"
                 Width="100"
                Grid.Column="1"
                Visibility="{Binding IsFacebookProfile,Converter={StaticResource VisibilityKey}}"
            Style="{StaticResource ImageButtonStyle}"
                HorizontalContentAlignment="Center"
                VerticalAlignment="Center"
                Command="{Binding FBCommand}"
                >
            <Grid
                         Height="100"
                 Width="100"
                         Background="{StaticResource SanetBlue}">
                    <Image Source="{Binding ProfilePhoto}"/>
                    <TextBlock Text="{Binding FacebookLoginLabel}"
                           VerticalAlignment="Top" Margin="2"
                           Foreground="White" TextWrapping="Wrap"
                           />
                

                <TextBlock Text="{Binding FacebookName}"
                           VerticalAlignment="Bottom" Margin="2"
                           Foreground="White" TextWrapping="Wrap"
                           />
            </Grid>

        </Button>
            
            <Controls:RotatingPanel
                Visibility="{Binding IsLocalProfile,Converter={StaticResource VisibilityKey}}"
                x:Name="PassPanel" Width="100" Height="100" Background="Blue"
                IsFace="{Binding IsPasswordReady, Mode=TwoWay}"
                                    Margin="5,0" 
                Grid.Column="2">
                <Grid Background="{StaticResource SanetBlue}"
                      Visibility="{Binding IsFace,ElementName=PassPanel,Converter={StaticResource VisibilityKey}}">
                    <Border 
                        Background="Red"
                        Opacity="0.8"
                        Visibility="{Binding HasPassword,Converter={StaticResource ReversedVisibilityKey}}"
                        BorderThickness="2"/>
                    <TextBlock VerticalAlignment="Top"
                                       Margin="2" TextWrapping="Wrap"
                                       Text="{Binding TapToChangeLabel}"/>
                            <TextBlock VerticalAlignment="Bottom"
                                       Margin="2"
                                       Text="{Binding PlayerPasswordLabelLocalized}"/>
                            
                        </Grid>
                      <Grid Visibility="{Binding IsFace,ElementName=PassPanel,Converter={StaticResource ReversedVisibilityKey}}"
                            Background="{StaticResource SanetBlue}">
                          <TextBlock VerticalAlignment="Top"
                                       Margin="2" TextWrapping="Wrap"
                                       Text="{Binding TapToApplyLabel}"/>
                          <StackPanel VerticalAlignment="Bottom">
                              <PasswordBox x:Name="passText" Margin="2" Password="{Binding Password, Mode=TwoWay}"
                     Height="30" IsPasswordRevealButtonEnabled="True"/>
                          
                </StackPanel>

        </Grid>

        </Controls:RotatingPanel>

        <Button
            Margin="5,0"
                 Height="100"
                 Width="100"
                Grid.Column="3"
                 Tapped="Magic_Tap"
                 Visibility="{Binding IsHuman,Converter={StaticResource VisibilityKey}}"
            Style="{StaticResource ImageButtonStyle}"
                HorizontalContentAlignment="Center"
                VerticalAlignment="Center"
                Command="{Binding MagicCommand}">
            <Grid
                         Height="100"
                 Width="100"
                         Background="{StaticResource SanetBlue}">
                <TextBlock Text="{Binding ArtifactsInfoMessage}"
                           VerticalAlignment="Top" Margin="2"
                           Foreground="White" TextWrapping="Wrap"
                            Visibility="{Binding HasArtifacts,Converter={StaticResource ReversedVisibilityKey}}"
                           />
                <Grid
                     VerticalAlignment="Top" Margin="2"
                           Visibility="{Binding HasArtifacts,Converter={StaticResource VisibilityKey}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Image Source="ms-appx:///Assets/MagicWand.png"
                            Width="32"
                            VerticalAlignment="Bottom"/>
                    <Image Source="ms-appx:///Assets/Manual.png"
                            Grid.Column="1"
                            Width="32"
                            VerticalAlignment="Bottom"/>
                    <Image Source="ms-appx:///Assets/ResetRoll.png"
                            Width="32"
                            Grid.Column="2"
                            VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding MagicRollsCount}"
                           VerticalAlignment="Bottom" Margin="2"
                                 HorizontalAlignment="Center"
                                 TextAlignment="Center"
                                 Grid.Row="1"
                                 Grid.Column="0"
                           Foreground="White" 
                           />
                    <TextBlock Text="{Binding ManualSetsCount}"
                           VerticalAlignment="Bottom" Margin="2"
                                 HorizontalAlignment="Center"
                                 TextAlignment="Center"
                                 Grid.Row="1"
                                 Grid.Column="1"
                           Foreground="White" 
                           />
                    <TextBlock Text="{Binding RollResetsCount}"
                           VerticalAlignment="Bottom" Margin="2"
                                 HorizontalAlignment="Center"
                                 TextAlignment="Center"
                                 Grid.Row="1"
                                 Grid.Column="2"
                           Foreground="White" 
                           />

                </Grid>

                <TextBlock Text="{Binding ArtifactsLabelLocalized}"
                           VerticalAlignment="Bottom" Margin="2"
                           Foreground="White" TextWrapping="Wrap"
                           Visibility="{Binding HasArtifacts,Converter={StaticResource VisibilityKey}}"
                           />
            </Grid>

        </Button>

        
        </Grid>

    </DataTemplate>-->

    <!--Datatemplate for main menu item-->
    <DataTemplate x:Key="TopPlayersTemplate">
        <Grid Height="30" Margin="5,0,0,0" HorizontalAlignment="Stretch"
                          >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="80"/>
                
            </Grid.ColumnDefinitions>
            <Image
                    Height="30"
                    Width="30"
                    Source="{Binding Image}"
                    />
            <Border Grid.Column="1"
                    BorderBrush="{StaticResource SanetBlue}"
                BorderThickness="0,0,1,0">
                
                <TextBlock Text="{Binding Name}" Foreground="White" 
                           HorizontalAlignment="Left"
                           Margin="5,0,0,0"
                           TextAlignment="Left"
                           TextWrapping="NoWrap"
                           TextTrimming="WordEllipsis"
                           FontSize="18" Height="25" />
            </Border>
            <Border Grid.Column="2"
                    BorderBrush="{StaticResource SanetBlue}"
                BorderThickness="0,0,1,0">

                <TextBlock Text="{Binding Games}" Foreground="White" 
                           HorizontalAlignment="Left"
                           TextAlignment="Left"
                           Margin="5,0,0,0"
                           TextWrapping="NoWrap"
                           TextTrimming="WordEllipsis"
                           FontSize="18" Height="25" />
            </Border>
            <Border Grid.Column="3"
                    BorderBrush="{StaticResource SanetBlue}"
                BorderThickness="0,0,1,0">

                <TextBlock Text="{Binding Total}" Foreground="White" 
                           HorizontalAlignment="Left"
                           TextAlignment="Left"
                           Margin="5,0,0,0"
                           TextWrapping="NoWrap"
                           TextTrimming="WordEllipsis"
                           FontSize="18" Height="25" />
            </Border>
            <Border Grid.Column="4"
                    BorderBrush="{StaticResource SanetBlue}"
                BorderThickness="0,0,0,0">

                <TextBlock Text="{Binding Score}" Foreground="White" 
                           HorizontalAlignment="Left"
                           Margin="5,0,0,0"
                           TextAlignment="Left"
                           TextWrapping="NoWrap"
                           TextTrimming="WordEllipsis"
                           FontSize="18" Height="25" />
            </Border>



        </Grid>
    </DataTemplate>

    <!--Datatemplate for app action in about page-->
    <DataTemplate x:Key="AboutAppActionTemplate">
        <Grid Height="70" Margin="0,15" HorizontalAlignment="Stretch"
                          >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition/>

            </Grid.ColumnDefinitions>
            <Image
                    Height="48"
                    Width="48"
                    Source="{Binding Image}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                    />
            <TextBlock Grid.Column="1"
                           Text="{Binding LocalizedLabel}" Foreground="{StaticResource SanetBlue}" 
                           HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                           Margin="5,0,0,0"
                           TextAlignment="Left"
                           TextWrapping="Wrap"
                           TextTrimming="WordEllipsis"
                           FontSize="20" MaxHeight="65" />
                        
        </Grid>
    </DataTemplate>

    <!--Datatemplate for other apps list in about page-->
    <DataTemplate x:Key="OtherAppActionTemplate">
        <Grid Height="170" Margin="0,15" HorizontalAlignment="Stretch"
                          >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="160"/>
                <ColumnDefinition/>

            </Grid.ColumnDefinitions>
            <Image
                    Height="150"
                    Width="150"
                    Source="{Binding Image}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                    />
            <Grid
                Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock 
                           Text="{Binding LocalizedLabel}" Foreground="{StaticResource SanetBlue}" 
                           HorizontalAlignment="Left"
                           Margin="15,0,0,15"
                           TextAlignment="Left"
                           TextWrapping="NoWrap"
                           TextTrimming="WordEllipsis"
                           FontSize="20" Height="25" />
                <TextBlock Grid.Row="1"
                           Text="{Binding LocalizedDescription}" Foreground="{StaticResource SanetBlue}" 
                           HorizontalAlignment="Left"
                           Margin="15,0,0,0"
                           TextAlignment="Left"
                           TextWrapping="Wrap"
                           MaxWidth="450"
                           TextTrimming="WordEllipsis"
                           FontSize="18" />
            </Grid>
           

        </Grid>
    </DataTemplate>


    <!--Image Button with simple pressed state -->
    <Style x:Key="ImageButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="78"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <PointerDownThemeAnimation TargetName="Border"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border">
                            <ContentPresenter x:Name="ContentPresenter"
                                    Content="{TemplateBinding Content}"
                                    ContentTransitions="{TemplateBinding ContentTransitions}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

                <!-- Grid-appropriate 500 by 130 pixel item template as seen in the GroupDetailPage -->
    <DataTemplate x:Key="Standard500x130ItemTemplate">
        <Grid Height="110" Width="480" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Width="110" Height="110">
                <Image Source="{Binding Image}" Stretch="UniformToFill" AutomationProperties.Name="{Binding Title}"/>
            </Border>
            <StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="10,0,0,0">
                <TextBlock Text="{Binding Title}" Style="{StaticResource TitleTextStyle}" TextWrapping="NoWrap"/>
                <TextBlock Text="{Binding Subtitle}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap"/>
                <TextBlock Text="{Binding Description}" Style="{StaticResource BodyTextStyle}" MaxHeight="60"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!-- List-appropriate 130 pixel high item template as seen in the SplitPage -->
    <DataTemplate x:Key="Standard130ItemTemplate">
        <Grid Height="110" Margin="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Width="110" Height="110">
                <Image Source="{Binding Image}" Stretch="UniformToFill" AutomationProperties.Name="{Binding Title}"/>
            </Border>
            <StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="10,0,0,0">
                <TextBlock Text="{Binding Title}" Style="{StaticResource TitleTextStyle}" TextWrapping="NoWrap"/>
                <TextBlock Text="{Binding Subtitle}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap"/>
                <TextBlock Text="{Binding Description}" Style="{StaticResource BodyTextStyle}" MaxHeight="60"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!--
        List-appropriate 80 pixel high item template as seen in the SplitPage when Filled, and
        the following pages when snapped: GroupedItemsPage, GroupDetailPage, and ItemsPage
    -->
    <DataTemplate x:Key="TestFaceItemStyle">
        <Grid Margin="6"
              Background="Blue">
            
        </Grid>
    </DataTemplate>

    <!-- Grid-appropriate 300 by 70 pixel item template as seen in the SearchResultsPage -->
    <DataTemplate x:Key="StandardSmallIcon300x70ItemTemplate">
        <Grid Width="294" Margin="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Margin="0,0,0,10" Width="40" Height="40">
                <Image Source="{Binding Image}" Stretch="UniformToFill"/>
            </Border>
            <StackPanel Grid.Column="1" Margin="10,-10,0,0">
                <TextBlock Text="{Binding Title}" Style="{StaticResource BodyTextStyle}" TextWrapping="NoWrap"/>
                <TextBlock Text="{Binding Subtitle}" Style="{StaticResource BodyTextStyle}" Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}" TextWrapping="NoWrap"/>
                <TextBlock Text="{Binding Description}" Style="{StaticResource BodyTextStyle}" Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}" TextWrapping="NoWrap"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!-- List-appropriate 70 pixel high item template as seen in the SearchResultsPage when Snapped -->
    <DataTemplate x:Key="StandardSmallIcon70ItemTemplate">
        <Grid Margin="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Margin="0,0,0,10" Width="40" Height="40">
                <Image Source="{Binding Image}" Stretch="UniformToFill"/>
            </Border>
            <StackPanel Grid.Column="1" Margin="10,-10,0,0">
                <TextBlock Text="{Binding Title}" Style="{StaticResource BodyTextStyle}" TextWrapping="NoWrap"/>
                <TextBlock Text="{Binding Subtitle}" Style="{StaticResource BodyTextStyle}" Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}" TextWrapping="NoWrap"/>
                <TextBlock Text="{Binding Description}" Style="{StaticResource BodyTextStyle}" Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}" TextWrapping="NoWrap"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!--
      190x130 pixel item template for displaying file previews as seen in the FileOpenPickerPage
      Includes an elaborate tooltip to display title and description text
  -->
    <DataTemplate x:Key="StandardFileWithTooltip190x130ItemTemplate">
        <Grid>
            <Grid Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
                <Image
                    Source="{Binding Image}"
                    Width="190"
                    Height="130"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Stretch="Uniform"/>
            </Grid>
            <ToolTipService.Placement>Mouse</ToolTipService.Placement>
            <ToolTipService.ToolTip>
                <ToolTip>
                    <ToolTip.Style>
                        <Style TargetType="ToolTip">
                            <Setter Property="BorderBrush" Value="{StaticResource ToolTipBackgroundThemeBrush}" />
                            <Setter Property="Padding" Value="0" />
                        </Style>
                    </ToolTip.Style>

                    <Grid Background="{StaticResource ApplicationPageBackgroundThemeBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Margin="20">
                            <Image
                                Source="{Binding Image}"
                                Width="160"
                                Height="160"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Stretch="Uniform"/>
                        </Grid>
                        <StackPanel Width="200" Grid.Column="1" Margin="0,20,20,20">
                            <TextBlock Text="{Binding Title}" TextWrapping="NoWrap" Style="{StaticResource BodyTextStyle}"/>
                            <TextBlock Text="{Binding Description}" MaxHeight="140" Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}" Style="{StaticResource BodyTextStyle}"/>
                        </StackPanel>
                    </Grid>
                </ToolTip>
            </ToolTipService.ToolTip>
        </Grid>
    </DataTemplate>

    <!-- ScrollViewer styles -->

    <Style x:Key="HorizontalScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled" />
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled" />
        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
    </Style>

    <Style x:Key="VerticalScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
    </Style>

    <!-- Page layout roots typically use entrance animations and a theme-appropriate background color -->

    <Style x:Key="LayoutRootStyle" TargetType="Panel">
        <Setter Property="Background" Value="{StaticResource ApplicationPageBackgroundThemeBrush}"/>
        <Setter Property="ChildrenTransitions">
            <Setter.Value>
                <TransitionCollection>
                    <EntranceThemeTransition/>
                </TransitionCollection>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
