//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18046
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace DicePokerWP.KniffelLeaderBoardService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KniffelScore", Namespace="http://www.sanet.com/")]
    public partial class KniffelScore : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int HighScoreField;
        
        private int IdField;
        
        private int TotalField;
        
        private int GamesField;
        
        private string PlayerField;
        
        private string PassField;
        
        private string PicUrlField;
        
        private string TableField;
        
        private int PlaceField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int HighScore {
            get {
                return this.HighScoreField;
            }
            set {
                if ((this.HighScoreField.Equals(value) != true)) {
                    this.HighScoreField = value;
                    this.RaisePropertyChanged("HighScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int Games {
            get {
                return this.GamesField;
            }
            set {
                if ((this.GamesField.Equals(value) != true)) {
                    this.GamesField = value;
                    this.RaisePropertyChanged("Games");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Player {
            get {
                return this.PlayerField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerField, value) != true)) {
                    this.PlayerField = value;
                    this.RaisePropertyChanged("Player");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Pass {
            get {
                return this.PassField;
            }
            set {
                if ((object.ReferenceEquals(this.PassField, value) != true)) {
                    this.PassField = value;
                    this.RaisePropertyChanged("Pass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string PicUrl {
            get {
                return this.PicUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.PicUrlField, value) != true)) {
                    this.PicUrlField = value;
                    this.RaisePropertyChanged("PicUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Table {
            get {
                return this.TableField;
            }
            set {
                if ((object.ReferenceEquals(this.TableField, value) != true)) {
                    this.TableField = value;
                    this.RaisePropertyChanged("Table");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public int Place {
            get {
                return this.PlaceField;
            }
            set {
                if ((this.PlaceField.Equals(value) != true)) {
                    this.PlaceField = value;
                    this.RaisePropertyChanged("Place");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.sanet.com/", ConfigurationName="KniffelLeaderBoardService.KniffelServiceSoap")]
    public interface KniffelServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sanet.com/PutScore", ReplyAction="*")]
        System.IAsyncResult BeginPutScore(DicePokerWP.KniffelLeaderBoardService.PutScoreRequest request, System.AsyncCallback callback, object asyncState);
        
        DicePokerWP.KniffelLeaderBoardService.PutScoreResponse EndPutScore(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sanet.com/PutScoreIntoTable", ReplyAction="*")]
        System.IAsyncResult BeginPutScoreIntoTable(DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableRequest request, System.AsyncCallback callback, object asyncState);
        
        DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableResponse EndPutScoreIntoTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sanet.com/PutScoreIntoTableWithPic", ReplyAction="*")]
        System.IAsyncResult BeginPutScoreIntoTableWithPic(DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicRequest request, System.AsyncCallback callback, object asyncState);
        
        DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicResponse EndPutScoreIntoTableWithPic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sanet.com/PutScoreIntoTableWithPicPureName", ReplyAction="*")]
        System.IAsyncResult BeginPutScoreIntoTableWithPicPureName(DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicPureNameRequest request, System.AsyncCallback callback, object asyncState);
        
        DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicPureNameResponse EndPutScoreIntoTableWithPicPureName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sanet.com/PutOnlineServerLog", ReplyAction="*")]
        System.IAsyncResult BeginPutOnlineServerLog(DicePokerWP.KniffelLeaderBoardService.PutOnlineServerLogRequest request, System.AsyncCallback callback, object asyncState);
        
        DicePokerWP.KniffelLeaderBoardService.PutOnlineServerLogResponse EndPutOnlineServerLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sanet.com/GetTopPlayers", ReplyAction="*")]
        System.IAsyncResult BeginGetTopPlayers(DicePokerWP.KniffelLeaderBoardService.GetTopPlayersRequest request, System.AsyncCallback callback, object asyncState);
        
        DicePokerWP.KniffelLeaderBoardService.GetTopPlayersResponse EndGetTopPlayers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sanet.com/GetChempion", ReplyAction="*")]
        System.IAsyncResult BeginGetChempion(DicePokerWP.KniffelLeaderBoardService.GetChempionRequest request, System.AsyncCallback callback, object asyncState);
        
        DicePokerWP.KniffelLeaderBoardService.GetChempionResponse EndGetChempion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sanet.com/GetLastWeekChempion", ReplyAction="*")]
        System.IAsyncResult BeginGetLastWeekChempion(DicePokerWP.KniffelLeaderBoardService.GetLastWeekChempionRequest request, System.AsyncCallback callback, object asyncState);
        
        DicePokerWP.KniffelLeaderBoardService.GetLastWeekChempionResponse EndGetLastWeekChempion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sanet.com/GetLastDayChempion", ReplyAction="*")]
        System.IAsyncResult BeginGetLastDayChempion(DicePokerWP.KniffelLeaderBoardService.GetLastDayChempionRequest request, System.AsyncCallback callback, object asyncState);
        
        DicePokerWP.KniffelLeaderBoardService.GetLastDayChempionResponse EndGetLastDayChempion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sanet.com/GetPlayersMagics", ReplyAction="*")]
        System.IAsyncResult BeginGetPlayersMagics(DicePokerWP.KniffelLeaderBoardService.GetPlayersMagicsRequest request, System.AsyncCallback callback, object asyncState);
        
        DicePokerWP.KniffelLeaderBoardService.GetPlayersMagicsResponse EndGetPlayersMagics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sanet.com/AddPlayersMagics", ReplyAction="*")]
        System.IAsyncResult BeginAddPlayersMagics(DicePokerWP.KniffelLeaderBoardService.AddPlayersMagicsRequest request, System.AsyncCallback callback, object asyncState);
        
        DicePokerWP.KniffelLeaderBoardService.AddPlayersMagicsResponse EndAddPlayersMagics(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PutScoreRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PutScore", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.PutScoreRequestBody Body;
        
        public PutScoreRequest() {
        }
        
        public PutScoreRequest(DicePokerWP.KniffelLeaderBoardService.PutScoreRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class PutScoreRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Pass;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Score;
        
        public PutScoreRequestBody() {
        }
        
        public PutScoreRequestBody(string UserName, string Pass, string Score) {
            this.UserName = UserName;
            this.Pass = Pass;
            this.Score = Score;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PutScoreResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PutScoreResponse", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.PutScoreResponseBody Body;
        
        public PutScoreResponse() {
        }
        
        public PutScoreResponse(DicePokerWP.KniffelLeaderBoardService.PutScoreResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class PutScoreResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool PutScoreResult;
        
        public PutScoreResponseBody() {
        }
        
        public PutScoreResponseBody(bool PutScoreResult) {
            this.PutScoreResult = PutScoreResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PutScoreIntoTableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PutScoreIntoTable", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableRequestBody Body;
        
        public PutScoreIntoTableRequest() {
        }
        
        public PutScoreIntoTableRequest(DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class PutScoreIntoTableRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Pass;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Score;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string table;
        
        public PutScoreIntoTableRequestBody() {
        }
        
        public PutScoreIntoTableRequestBody(string UserName, string Pass, string Score, string table) {
            this.UserName = UserName;
            this.Pass = Pass;
            this.Score = Score;
            this.table = table;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PutScoreIntoTableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PutScoreIntoTableResponse", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableResponseBody Body;
        
        public PutScoreIntoTableResponse() {
        }
        
        public PutScoreIntoTableResponse(DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class PutScoreIntoTableResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool PutScoreIntoTableResult;
        
        public PutScoreIntoTableResponseBody() {
        }
        
        public PutScoreIntoTableResponseBody(bool PutScoreIntoTableResult) {
            this.PutScoreIntoTableResult = PutScoreIntoTableResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PutScoreIntoTableWithPicRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PutScoreIntoTableWithPic", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicRequestBody Body;
        
        public PutScoreIntoTableWithPicRequest() {
        }
        
        public PutScoreIntoTableWithPicRequest(DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class PutScoreIntoTableWithPicRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Pass;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Score;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string table;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string picurl;
        
        public PutScoreIntoTableWithPicRequestBody() {
        }
        
        public PutScoreIntoTableWithPicRequestBody(string UserName, string Pass, string Score, string table, string picurl) {
            this.UserName = UserName;
            this.Pass = Pass;
            this.Score = Score;
            this.table = table;
            this.picurl = picurl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PutScoreIntoTableWithPicResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PutScoreIntoTableWithPicResponse", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicResponseBody Body;
        
        public PutScoreIntoTableWithPicResponse() {
        }
        
        public PutScoreIntoTableWithPicResponse(DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class PutScoreIntoTableWithPicResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool PutScoreIntoTableWithPicResult;
        
        public PutScoreIntoTableWithPicResponseBody() {
        }
        
        public PutScoreIntoTableWithPicResponseBody(bool PutScoreIntoTableWithPicResult) {
            this.PutScoreIntoTableWithPicResult = PutScoreIntoTableWithPicResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PutScoreIntoTableWithPicPureNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PutScoreIntoTableWithPicPureName", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicPureNameRequestBody Body;
        
        public PutScoreIntoTableWithPicPureNameRequest() {
        }
        
        public PutScoreIntoTableWithPicPureNameRequest(DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicPureNameRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class PutScoreIntoTableWithPicPureNameRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Pass;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Score;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string table;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string picurl;
        
        public PutScoreIntoTableWithPicPureNameRequestBody() {
        }
        
        public PutScoreIntoTableWithPicPureNameRequestBody(string UserName, string Pass, string Score, string table, string picurl) {
            this.UserName = UserName;
            this.Pass = Pass;
            this.Score = Score;
            this.table = table;
            this.picurl = picurl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PutScoreIntoTableWithPicPureNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PutScoreIntoTableWithPicPureNameResponse", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicPureNameResponseBody Body;
        
        public PutScoreIntoTableWithPicPureNameResponse() {
        }
        
        public PutScoreIntoTableWithPicPureNameResponse(DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicPureNameResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class PutScoreIntoTableWithPicPureNameResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool PutScoreIntoTableWithPicPureNameResult;
        
        public PutScoreIntoTableWithPicPureNameResponseBody() {
        }
        
        public PutScoreIntoTableWithPicPureNameResponseBody(bool PutScoreIntoTableWithPicPureNameResult) {
            this.PutScoreIntoTableWithPicPureNameResult = PutScoreIntoTableWithPicPureNameResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PutOnlineServerLogRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PutOnlineServerLog", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.PutOnlineServerLogRequestBody Body;
        
        public PutOnlineServerLogRequest() {
        }
        
        public PutOnlineServerLogRequest(DicePokerWP.KniffelLeaderBoardService.PutOnlineServerLogRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class PutOnlineServerLogRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string source;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string message;
        
        public PutOnlineServerLogRequestBody() {
        }
        
        public PutOnlineServerLogRequestBody(string source, string message) {
            this.source = source;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PutOnlineServerLogResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PutOnlineServerLogResponse", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.PutOnlineServerLogResponseBody Body;
        
        public PutOnlineServerLogResponse() {
        }
        
        public PutOnlineServerLogResponse(DicePokerWP.KniffelLeaderBoardService.PutOnlineServerLogResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class PutOnlineServerLogResponseBody {
        
        public PutOnlineServerLogResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTopPlayersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTopPlayers", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.GetTopPlayersRequestBody Body;
        
        public GetTopPlayersRequest() {
        }
        
        public GetTopPlayersRequest(DicePokerWP.KniffelLeaderBoardService.GetTopPlayersRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class GetTopPlayersRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string rules;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public System.Collections.ObjectModel.ObservableCollection<DicePokerWP.KniffelLeaderBoardService.KniffelScore> Players;
        
        public GetTopPlayersRequestBody() {
        }
        
        public GetTopPlayersRequestBody(string rules, System.Collections.ObjectModel.ObservableCollection<DicePokerWP.KniffelLeaderBoardService.KniffelScore> Players) {
            this.rules = rules;
            this.Players = Players;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTopPlayersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTopPlayersResponse", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.GetTopPlayersResponseBody Body;
        
        public GetTopPlayersResponse() {
        }
        
        public GetTopPlayersResponse(DicePokerWP.KniffelLeaderBoardService.GetTopPlayersResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class GetTopPlayersResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool GetTopPlayersResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public System.Collections.ObjectModel.ObservableCollection<DicePokerWP.KniffelLeaderBoardService.KniffelScore> Players;
        
        public GetTopPlayersResponseBody() {
        }
        
        public GetTopPlayersResponseBody(bool GetTopPlayersResult, System.Collections.ObjectModel.ObservableCollection<DicePokerWP.KniffelLeaderBoardService.KniffelScore> Players) {
            this.GetTopPlayersResult = GetTopPlayersResult;
            this.Players = Players;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetChempionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetChempion", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.GetChempionRequestBody Body;
        
        public GetChempionRequest() {
        }
        
        public GetChempionRequest(DicePokerWP.KniffelLeaderBoardService.GetChempionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class GetChempionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string rules;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Score;
        
        public GetChempionRequestBody() {
        }
        
        public GetChempionRequestBody(string rules, string Name, string Score) {
            this.rules = rules;
            this.Name = Name;
            this.Score = Score;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetChempionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetChempionResponse", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.GetChempionResponseBody Body;
        
        public GetChempionResponse() {
        }
        
        public GetChempionResponse(DicePokerWP.KniffelLeaderBoardService.GetChempionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class GetChempionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool GetChempionResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Score;
        
        public GetChempionResponseBody() {
        }
        
        public GetChempionResponseBody(bool GetChempionResult, string Name, string Score) {
            this.GetChempionResult = GetChempionResult;
            this.Name = Name;
            this.Score = Score;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLastWeekChempionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetLastWeekChempion", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.GetLastWeekChempionRequestBody Body;
        
        public GetLastWeekChempionRequest() {
        }
        
        public GetLastWeekChempionRequest(DicePokerWP.KniffelLeaderBoardService.GetLastWeekChempionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class GetLastWeekChempionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string rules;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Score;
        
        public GetLastWeekChempionRequestBody() {
        }
        
        public GetLastWeekChempionRequestBody(string rules, string Name, string Score) {
            this.rules = rules;
            this.Name = Name;
            this.Score = Score;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLastWeekChempionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetLastWeekChempionResponse", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.GetLastWeekChempionResponseBody Body;
        
        public GetLastWeekChempionResponse() {
        }
        
        public GetLastWeekChempionResponse(DicePokerWP.KniffelLeaderBoardService.GetLastWeekChempionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class GetLastWeekChempionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool GetLastWeekChempionResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Score;
        
        public GetLastWeekChempionResponseBody() {
        }
        
        public GetLastWeekChempionResponseBody(bool GetLastWeekChempionResult, string Name, string Score) {
            this.GetLastWeekChempionResult = GetLastWeekChempionResult;
            this.Name = Name;
            this.Score = Score;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLastDayChempionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetLastDayChempion", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.GetLastDayChempionRequestBody Body;
        
        public GetLastDayChempionRequest() {
        }
        
        public GetLastDayChempionRequest(DicePokerWP.KniffelLeaderBoardService.GetLastDayChempionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class GetLastDayChempionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string rules;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Score;
        
        public GetLastDayChempionRequestBody() {
        }
        
        public GetLastDayChempionRequestBody(string rules, string Name, string Score) {
            this.rules = rules;
            this.Name = Name;
            this.Score = Score;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLastDayChempionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetLastDayChempionResponse", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.GetLastDayChempionResponseBody Body;
        
        public GetLastDayChempionResponse() {
        }
        
        public GetLastDayChempionResponse(DicePokerWP.KniffelLeaderBoardService.GetLastDayChempionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class GetLastDayChempionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool GetLastDayChempionResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Score;
        
        public GetLastDayChempionResponseBody() {
        }
        
        public GetLastDayChempionResponseBody(bool GetLastDayChempionResult, string Name, string Score) {
            this.GetLastDayChempionResult = GetLastDayChempionResult;
            this.Name = Name;
            this.Score = Score;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPlayersMagicsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPlayersMagics", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.GetPlayersMagicsRequestBody Body;
        
        public GetPlayersMagicsRequest() {
        }
        
        public GetPlayersMagicsRequest(DicePokerWP.KniffelLeaderBoardService.GetPlayersMagicsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class GetPlayersMagicsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string username;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string pass;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int rolls;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int manuals;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int resets;
        
        public GetPlayersMagicsRequestBody() {
        }
        
        public GetPlayersMagicsRequestBody(string username, string pass, int rolls, int manuals, int resets) {
            this.username = username;
            this.pass = pass;
            this.rolls = rolls;
            this.manuals = manuals;
            this.resets = resets;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPlayersMagicsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPlayersMagicsResponse", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.GetPlayersMagicsResponseBody Body;
        
        public GetPlayersMagicsResponse() {
        }
        
        public GetPlayersMagicsResponse(DicePokerWP.KniffelLeaderBoardService.GetPlayersMagicsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class GetPlayersMagicsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool GetPlayersMagicsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int rolls;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int manuals;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int resets;
        
        public GetPlayersMagicsResponseBody() {
        }
        
        public GetPlayersMagicsResponseBody(bool GetPlayersMagicsResult, int rolls, int manuals, int resets) {
            this.GetPlayersMagicsResult = GetPlayersMagicsResult;
            this.rolls = rolls;
            this.manuals = manuals;
            this.resets = resets;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddPlayersMagicsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddPlayersMagics", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.AddPlayersMagicsRequestBody Body;
        
        public AddPlayersMagicsRequest() {
        }
        
        public AddPlayersMagicsRequest(DicePokerWP.KniffelLeaderBoardService.AddPlayersMagicsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class AddPlayersMagicsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string username;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string pass;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string rolls;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string manuals;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string resets;
        
        public AddPlayersMagicsRequestBody() {
        }
        
        public AddPlayersMagicsRequestBody(string username, string pass, string rolls, string manuals, string resets) {
            this.username = username;
            this.pass = pass;
            this.rolls = rolls;
            this.manuals = manuals;
            this.resets = resets;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddPlayersMagicsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddPlayersMagicsResponse", Namespace="http://www.sanet.com/", Order=0)]
        public DicePokerWP.KniffelLeaderBoardService.AddPlayersMagicsResponseBody Body;
        
        public AddPlayersMagicsResponse() {
        }
        
        public AddPlayersMagicsResponse(DicePokerWP.KniffelLeaderBoardService.AddPlayersMagicsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.sanet.com/")]
    public partial class AddPlayersMagicsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool AddPlayersMagicsResult;
        
        public AddPlayersMagicsResponseBody() {
        }
        
        public AddPlayersMagicsResponseBody(bool AddPlayersMagicsResult) {
            this.AddPlayersMagicsResult = AddPlayersMagicsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface KniffelServiceSoapChannel : DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PutScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PutScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PutScoreIntoTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PutScoreIntoTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PutScoreIntoTableWithPicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PutScoreIntoTableWithPicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PutScoreIntoTableWithPicPureNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PutScoreIntoTableWithPicPureNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTopPlayersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTopPlayersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DicePokerWP.KniffelLeaderBoardService.KniffelScore> Players {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DicePokerWP.KniffelLeaderBoardService.KniffelScore>)(this.results[0]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetChempionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetChempionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Name {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public string Score {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLastWeekChempionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLastWeekChempionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Name {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public string Score {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLastDayChempionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLastDayChempionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Name {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public string Score {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlayersMagicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlayersMagicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int rolls {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public int manuals {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        public int resets {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddPlayersMagicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddPlayersMagicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KniffelServiceSoapClient : System.ServiceModel.ClientBase<DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap>, DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap {
        
        private BeginOperationDelegate onBeginPutScoreDelegate;
        
        private EndOperationDelegate onEndPutScoreDelegate;
        
        private System.Threading.SendOrPostCallback onPutScoreCompletedDelegate;
        
        private BeginOperationDelegate onBeginPutScoreIntoTableDelegate;
        
        private EndOperationDelegate onEndPutScoreIntoTableDelegate;
        
        private System.Threading.SendOrPostCallback onPutScoreIntoTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginPutScoreIntoTableWithPicDelegate;
        
        private EndOperationDelegate onEndPutScoreIntoTableWithPicDelegate;
        
        private System.Threading.SendOrPostCallback onPutScoreIntoTableWithPicCompletedDelegate;
        
        private BeginOperationDelegate onBeginPutScoreIntoTableWithPicPureNameDelegate;
        
        private EndOperationDelegate onEndPutScoreIntoTableWithPicPureNameDelegate;
        
        private System.Threading.SendOrPostCallback onPutScoreIntoTableWithPicPureNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginPutOnlineServerLogDelegate;
        
        private EndOperationDelegate onEndPutOnlineServerLogDelegate;
        
        private System.Threading.SendOrPostCallback onPutOnlineServerLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTopPlayersDelegate;
        
        private EndOperationDelegate onEndGetTopPlayersDelegate;
        
        private System.Threading.SendOrPostCallback onGetTopPlayersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetChempionDelegate;
        
        private EndOperationDelegate onEndGetChempionDelegate;
        
        private System.Threading.SendOrPostCallback onGetChempionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLastWeekChempionDelegate;
        
        private EndOperationDelegate onEndGetLastWeekChempionDelegate;
        
        private System.Threading.SendOrPostCallback onGetLastWeekChempionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLastDayChempionDelegate;
        
        private EndOperationDelegate onEndGetLastDayChempionDelegate;
        
        private System.Threading.SendOrPostCallback onGetLastDayChempionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlayersMagicsDelegate;
        
        private EndOperationDelegate onEndGetPlayersMagicsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlayersMagicsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPlayersMagicsDelegate;
        
        private EndOperationDelegate onEndAddPlayersMagicsDelegate;
        
        private System.Threading.SendOrPostCallback onAddPlayersMagicsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public KniffelServiceSoapClient() {
        }
        
        public KniffelServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public KniffelServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KniffelServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KniffelServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<PutScoreCompletedEventArgs> PutScoreCompleted;
        
        public event System.EventHandler<PutScoreIntoTableCompletedEventArgs> PutScoreIntoTableCompleted;
        
        public event System.EventHandler<PutScoreIntoTableWithPicCompletedEventArgs> PutScoreIntoTableWithPicCompleted;
        
        public event System.EventHandler<PutScoreIntoTableWithPicPureNameCompletedEventArgs> PutScoreIntoTableWithPicPureNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PutOnlineServerLogCompleted;
        
        public event System.EventHandler<GetTopPlayersCompletedEventArgs> GetTopPlayersCompleted;
        
        public event System.EventHandler<GetChempionCompletedEventArgs> GetChempionCompleted;
        
        public event System.EventHandler<GetLastWeekChempionCompletedEventArgs> GetLastWeekChempionCompleted;
        
        public event System.EventHandler<GetLastDayChempionCompletedEventArgs> GetLastDayChempionCompleted;
        
        public event System.EventHandler<GetPlayersMagicsCompletedEventArgs> GetPlayersMagicsCompleted;
        
        public event System.EventHandler<AddPlayersMagicsCompletedEventArgs> AddPlayersMagicsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.BeginPutScore(DicePokerWP.KniffelLeaderBoardService.PutScoreRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPutScore(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginPutScore(string UserName, string Pass, string Score, System.AsyncCallback callback, object asyncState) {
            DicePokerWP.KniffelLeaderBoardService.PutScoreRequest inValue = new DicePokerWP.KniffelLeaderBoardService.PutScoreRequest();
            inValue.Body = new DicePokerWP.KniffelLeaderBoardService.PutScoreRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Pass = Pass;
            inValue.Body.Score = Score;
            return ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).BeginPutScore(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DicePokerWP.KniffelLeaderBoardService.PutScoreResponse DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.EndPutScore(System.IAsyncResult result) {
            return base.Channel.EndPutScore(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndPutScore(System.IAsyncResult result) {
            DicePokerWP.KniffelLeaderBoardService.PutScoreResponse retVal = ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).EndPutScore(result);
            return retVal.Body.PutScoreResult;
        }
        
        private System.IAsyncResult OnBeginPutScore(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string Pass = ((string)(inValues[1]));
            string Score = ((string)(inValues[2]));
            return this.BeginPutScore(UserName, Pass, Score, callback, asyncState);
        }
        
        private object[] OnEndPutScore(System.IAsyncResult result) {
            bool retVal = this.EndPutScore(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPutScoreCompleted(object state) {
            if ((this.PutScoreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PutScoreCompleted(this, new PutScoreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PutScoreAsync(string UserName, string Pass, string Score) {
            this.PutScoreAsync(UserName, Pass, Score, null);
        }
        
        public void PutScoreAsync(string UserName, string Pass, string Score, object userState) {
            if ((this.onBeginPutScoreDelegate == null)) {
                this.onBeginPutScoreDelegate = new BeginOperationDelegate(this.OnBeginPutScore);
            }
            if ((this.onEndPutScoreDelegate == null)) {
                this.onEndPutScoreDelegate = new EndOperationDelegate(this.OnEndPutScore);
            }
            if ((this.onPutScoreCompletedDelegate == null)) {
                this.onPutScoreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPutScoreCompleted);
            }
            base.InvokeAsync(this.onBeginPutScoreDelegate, new object[] {
                        UserName,
                        Pass,
                        Score}, this.onEndPutScoreDelegate, this.onPutScoreCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.BeginPutScoreIntoTable(DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPutScoreIntoTable(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginPutScoreIntoTable(string UserName, string Pass, string Score, string table, System.AsyncCallback callback, object asyncState) {
            DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableRequest inValue = new DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableRequest();
            inValue.Body = new DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Pass = Pass;
            inValue.Body.Score = Score;
            inValue.Body.table = table;
            return ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).BeginPutScoreIntoTable(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableResponse DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.EndPutScoreIntoTable(System.IAsyncResult result) {
            return base.Channel.EndPutScoreIntoTable(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndPutScoreIntoTable(System.IAsyncResult result) {
            DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableResponse retVal = ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).EndPutScoreIntoTable(result);
            return retVal.Body.PutScoreIntoTableResult;
        }
        
        private System.IAsyncResult OnBeginPutScoreIntoTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string Pass = ((string)(inValues[1]));
            string Score = ((string)(inValues[2]));
            string table = ((string)(inValues[3]));
            return this.BeginPutScoreIntoTable(UserName, Pass, Score, table, callback, asyncState);
        }
        
        private object[] OnEndPutScoreIntoTable(System.IAsyncResult result) {
            bool retVal = this.EndPutScoreIntoTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPutScoreIntoTableCompleted(object state) {
            if ((this.PutScoreIntoTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PutScoreIntoTableCompleted(this, new PutScoreIntoTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PutScoreIntoTableAsync(string UserName, string Pass, string Score, string table) {
            this.PutScoreIntoTableAsync(UserName, Pass, Score, table, null);
        }
        
        public void PutScoreIntoTableAsync(string UserName, string Pass, string Score, string table, object userState) {
            if ((this.onBeginPutScoreIntoTableDelegate == null)) {
                this.onBeginPutScoreIntoTableDelegate = new BeginOperationDelegate(this.OnBeginPutScoreIntoTable);
            }
            if ((this.onEndPutScoreIntoTableDelegate == null)) {
                this.onEndPutScoreIntoTableDelegate = new EndOperationDelegate(this.OnEndPutScoreIntoTable);
            }
            if ((this.onPutScoreIntoTableCompletedDelegate == null)) {
                this.onPutScoreIntoTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPutScoreIntoTableCompleted);
            }
            base.InvokeAsync(this.onBeginPutScoreIntoTableDelegate, new object[] {
                        UserName,
                        Pass,
                        Score,
                        table}, this.onEndPutScoreIntoTableDelegate, this.onPutScoreIntoTableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.BeginPutScoreIntoTableWithPic(DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPutScoreIntoTableWithPic(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginPutScoreIntoTableWithPic(string UserName, string Pass, string Score, string table, string picurl, System.AsyncCallback callback, object asyncState) {
            DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicRequest inValue = new DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicRequest();
            inValue.Body = new DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Pass = Pass;
            inValue.Body.Score = Score;
            inValue.Body.table = table;
            inValue.Body.picurl = picurl;
            return ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).BeginPutScoreIntoTableWithPic(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicResponse DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.EndPutScoreIntoTableWithPic(System.IAsyncResult result) {
            return base.Channel.EndPutScoreIntoTableWithPic(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndPutScoreIntoTableWithPic(System.IAsyncResult result) {
            DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicResponse retVal = ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).EndPutScoreIntoTableWithPic(result);
            return retVal.Body.PutScoreIntoTableWithPicResult;
        }
        
        private System.IAsyncResult OnBeginPutScoreIntoTableWithPic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string Pass = ((string)(inValues[1]));
            string Score = ((string)(inValues[2]));
            string table = ((string)(inValues[3]));
            string picurl = ((string)(inValues[4]));
            return this.BeginPutScoreIntoTableWithPic(UserName, Pass, Score, table, picurl, callback, asyncState);
        }
        
        private object[] OnEndPutScoreIntoTableWithPic(System.IAsyncResult result) {
            bool retVal = this.EndPutScoreIntoTableWithPic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPutScoreIntoTableWithPicCompleted(object state) {
            if ((this.PutScoreIntoTableWithPicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PutScoreIntoTableWithPicCompleted(this, new PutScoreIntoTableWithPicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PutScoreIntoTableWithPicAsync(string UserName, string Pass, string Score, string table, string picurl) {
            this.PutScoreIntoTableWithPicAsync(UserName, Pass, Score, table, picurl, null);
        }
        
        public void PutScoreIntoTableWithPicAsync(string UserName, string Pass, string Score, string table, string picurl, object userState) {
            if ((this.onBeginPutScoreIntoTableWithPicDelegate == null)) {
                this.onBeginPutScoreIntoTableWithPicDelegate = new BeginOperationDelegate(this.OnBeginPutScoreIntoTableWithPic);
            }
            if ((this.onEndPutScoreIntoTableWithPicDelegate == null)) {
                this.onEndPutScoreIntoTableWithPicDelegate = new EndOperationDelegate(this.OnEndPutScoreIntoTableWithPic);
            }
            if ((this.onPutScoreIntoTableWithPicCompletedDelegate == null)) {
                this.onPutScoreIntoTableWithPicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPutScoreIntoTableWithPicCompleted);
            }
            base.InvokeAsync(this.onBeginPutScoreIntoTableWithPicDelegate, new object[] {
                        UserName,
                        Pass,
                        Score,
                        table,
                        picurl}, this.onEndPutScoreIntoTableWithPicDelegate, this.onPutScoreIntoTableWithPicCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.BeginPutScoreIntoTableWithPicPureName(DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicPureNameRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPutScoreIntoTableWithPicPureName(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginPutScoreIntoTableWithPicPureName(string UserName, string Pass, string Score, string table, string picurl, System.AsyncCallback callback, object asyncState) {
            DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicPureNameRequest inValue = new DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicPureNameRequest();
            inValue.Body = new DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicPureNameRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Pass = Pass;
            inValue.Body.Score = Score;
            inValue.Body.table = table;
            inValue.Body.picurl = picurl;
            return ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).BeginPutScoreIntoTableWithPicPureName(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicPureNameResponse DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.EndPutScoreIntoTableWithPicPureName(System.IAsyncResult result) {
            return base.Channel.EndPutScoreIntoTableWithPicPureName(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndPutScoreIntoTableWithPicPureName(System.IAsyncResult result) {
            DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicPureNameResponse retVal = ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).EndPutScoreIntoTableWithPicPureName(result);
            return retVal.Body.PutScoreIntoTableWithPicPureNameResult;
        }
        
        private System.IAsyncResult OnBeginPutScoreIntoTableWithPicPureName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string Pass = ((string)(inValues[1]));
            string Score = ((string)(inValues[2]));
            string table = ((string)(inValues[3]));
            string picurl = ((string)(inValues[4]));
            return this.BeginPutScoreIntoTableWithPicPureName(UserName, Pass, Score, table, picurl, callback, asyncState);
        }
        
        private object[] OnEndPutScoreIntoTableWithPicPureName(System.IAsyncResult result) {
            bool retVal = this.EndPutScoreIntoTableWithPicPureName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPutScoreIntoTableWithPicPureNameCompleted(object state) {
            if ((this.PutScoreIntoTableWithPicPureNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PutScoreIntoTableWithPicPureNameCompleted(this, new PutScoreIntoTableWithPicPureNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PutScoreIntoTableWithPicPureNameAsync(string UserName, string Pass, string Score, string table, string picurl) {
            this.PutScoreIntoTableWithPicPureNameAsync(UserName, Pass, Score, table, picurl, null);
        }
        
        public void PutScoreIntoTableWithPicPureNameAsync(string UserName, string Pass, string Score, string table, string picurl, object userState) {
            if ((this.onBeginPutScoreIntoTableWithPicPureNameDelegate == null)) {
                this.onBeginPutScoreIntoTableWithPicPureNameDelegate = new BeginOperationDelegate(this.OnBeginPutScoreIntoTableWithPicPureName);
            }
            if ((this.onEndPutScoreIntoTableWithPicPureNameDelegate == null)) {
                this.onEndPutScoreIntoTableWithPicPureNameDelegate = new EndOperationDelegate(this.OnEndPutScoreIntoTableWithPicPureName);
            }
            if ((this.onPutScoreIntoTableWithPicPureNameCompletedDelegate == null)) {
                this.onPutScoreIntoTableWithPicPureNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPutScoreIntoTableWithPicPureNameCompleted);
            }
            base.InvokeAsync(this.onBeginPutScoreIntoTableWithPicPureNameDelegate, new object[] {
                        UserName,
                        Pass,
                        Score,
                        table,
                        picurl}, this.onEndPutScoreIntoTableWithPicPureNameDelegate, this.onPutScoreIntoTableWithPicPureNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.BeginPutOnlineServerLog(DicePokerWP.KniffelLeaderBoardService.PutOnlineServerLogRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPutOnlineServerLog(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginPutOnlineServerLog(string source, string message, System.AsyncCallback callback, object asyncState) {
            DicePokerWP.KniffelLeaderBoardService.PutOnlineServerLogRequest inValue = new DicePokerWP.KniffelLeaderBoardService.PutOnlineServerLogRequest();
            inValue.Body = new DicePokerWP.KniffelLeaderBoardService.PutOnlineServerLogRequestBody();
            inValue.Body.source = source;
            inValue.Body.message = message;
            return ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).BeginPutOnlineServerLog(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DicePokerWP.KniffelLeaderBoardService.PutOnlineServerLogResponse DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.EndPutOnlineServerLog(System.IAsyncResult result) {
            return base.Channel.EndPutOnlineServerLog(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndPutOnlineServerLog(System.IAsyncResult result) {
            DicePokerWP.KniffelLeaderBoardService.PutOnlineServerLogResponse retVal = ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).EndPutOnlineServerLog(result);
        }
        
        private System.IAsyncResult OnBeginPutOnlineServerLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string source = ((string)(inValues[0]));
            string message = ((string)(inValues[1]));
            return this.BeginPutOnlineServerLog(source, message, callback, asyncState);
        }
        
        private object[] OnEndPutOnlineServerLog(System.IAsyncResult result) {
            this.EndPutOnlineServerLog(result);
            return null;
        }
        
        private void OnPutOnlineServerLogCompleted(object state) {
            if ((this.PutOnlineServerLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PutOnlineServerLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PutOnlineServerLogAsync(string source, string message) {
            this.PutOnlineServerLogAsync(source, message, null);
        }
        
        public void PutOnlineServerLogAsync(string source, string message, object userState) {
            if ((this.onBeginPutOnlineServerLogDelegate == null)) {
                this.onBeginPutOnlineServerLogDelegate = new BeginOperationDelegate(this.OnBeginPutOnlineServerLog);
            }
            if ((this.onEndPutOnlineServerLogDelegate == null)) {
                this.onEndPutOnlineServerLogDelegate = new EndOperationDelegate(this.OnEndPutOnlineServerLog);
            }
            if ((this.onPutOnlineServerLogCompletedDelegate == null)) {
                this.onPutOnlineServerLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPutOnlineServerLogCompleted);
            }
            base.InvokeAsync(this.onBeginPutOnlineServerLogDelegate, new object[] {
                        source,
                        message}, this.onEndPutOnlineServerLogDelegate, this.onPutOnlineServerLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.BeginGetTopPlayers(DicePokerWP.KniffelLeaderBoardService.GetTopPlayersRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTopPlayers(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetTopPlayers(string rules, System.Collections.ObjectModel.ObservableCollection<DicePokerWP.KniffelLeaderBoardService.KniffelScore> Players, System.AsyncCallback callback, object asyncState) {
            DicePokerWP.KniffelLeaderBoardService.GetTopPlayersRequest inValue = new DicePokerWP.KniffelLeaderBoardService.GetTopPlayersRequest();
            inValue.Body = new DicePokerWP.KniffelLeaderBoardService.GetTopPlayersRequestBody();
            inValue.Body.rules = rules;
            inValue.Body.Players = Players;
            return ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).BeginGetTopPlayers(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DicePokerWP.KniffelLeaderBoardService.GetTopPlayersResponse DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.EndGetTopPlayers(System.IAsyncResult result) {
            return base.Channel.EndGetTopPlayers(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndGetTopPlayers(System.IAsyncResult result, out System.Collections.ObjectModel.ObservableCollection<DicePokerWP.KniffelLeaderBoardService.KniffelScore> Players) {
            DicePokerWP.KniffelLeaderBoardService.GetTopPlayersResponse retVal = ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).EndGetTopPlayers(result);
            Players = retVal.Body.Players;
            return retVal.Body.GetTopPlayersResult;
        }
        
        private System.IAsyncResult OnBeginGetTopPlayers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string rules = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<DicePokerWP.KniffelLeaderBoardService.KniffelScore> Players = ((System.Collections.ObjectModel.ObservableCollection<DicePokerWP.KniffelLeaderBoardService.KniffelScore>)(inValues[1]));
            return this.BeginGetTopPlayers(rules, Players, callback, asyncState);
        }
        
        private object[] OnEndGetTopPlayers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DicePokerWP.KniffelLeaderBoardService.KniffelScore> Players = this.GetDefaultValueForInitialization<System.Collections.ObjectModel.ObservableCollection<DicePokerWP.KniffelLeaderBoardService.KniffelScore>>();
            bool retVal = this.EndGetTopPlayers(result, out Players);
            return new object[] {
                    Players,
                    retVal};
        }
        
        private void OnGetTopPlayersCompleted(object state) {
            if ((this.GetTopPlayersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTopPlayersCompleted(this, new GetTopPlayersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTopPlayersAsync(string rules, System.Collections.ObjectModel.ObservableCollection<DicePokerWP.KniffelLeaderBoardService.KniffelScore> Players) {
            this.GetTopPlayersAsync(rules, Players, null);
        }
        
        public void GetTopPlayersAsync(string rules, System.Collections.ObjectModel.ObservableCollection<DicePokerWP.KniffelLeaderBoardService.KniffelScore> Players, object userState) {
            if ((this.onBeginGetTopPlayersDelegate == null)) {
                this.onBeginGetTopPlayersDelegate = new BeginOperationDelegate(this.OnBeginGetTopPlayers);
            }
            if ((this.onEndGetTopPlayersDelegate == null)) {
                this.onEndGetTopPlayersDelegate = new EndOperationDelegate(this.OnEndGetTopPlayers);
            }
            if ((this.onGetTopPlayersCompletedDelegate == null)) {
                this.onGetTopPlayersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTopPlayersCompleted);
            }
            base.InvokeAsync(this.onBeginGetTopPlayersDelegate, new object[] {
                        rules,
                        Players}, this.onEndGetTopPlayersDelegate, this.onGetTopPlayersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.BeginGetChempion(DicePokerWP.KniffelLeaderBoardService.GetChempionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetChempion(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetChempion(string rules, string Name, string Score, System.AsyncCallback callback, object asyncState) {
            DicePokerWP.KniffelLeaderBoardService.GetChempionRequest inValue = new DicePokerWP.KniffelLeaderBoardService.GetChempionRequest();
            inValue.Body = new DicePokerWP.KniffelLeaderBoardService.GetChempionRequestBody();
            inValue.Body.rules = rules;
            inValue.Body.Name = Name;
            inValue.Body.Score = Score;
            return ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).BeginGetChempion(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DicePokerWP.KniffelLeaderBoardService.GetChempionResponse DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.EndGetChempion(System.IAsyncResult result) {
            return base.Channel.EndGetChempion(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndGetChempion(System.IAsyncResult result, out string Name, out string Score) {
            DicePokerWP.KniffelLeaderBoardService.GetChempionResponse retVal = ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).EndGetChempion(result);
            Name = retVal.Body.Name;
            Score = retVal.Body.Score;
            return retVal.Body.GetChempionResult;
        }
        
        private System.IAsyncResult OnBeginGetChempion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string rules = ((string)(inValues[0]));
            string Name = ((string)(inValues[1]));
            string Score = ((string)(inValues[2]));
            return this.BeginGetChempion(rules, Name, Score, callback, asyncState);
        }
        
        private object[] OnEndGetChempion(System.IAsyncResult result) {
            string Name = this.GetDefaultValueForInitialization<string>();
            string Score = this.GetDefaultValueForInitialization<string>();
            bool retVal = this.EndGetChempion(result, out Name, out Score);
            return new object[] {
                    Name,
                    Score,
                    retVal};
        }
        
        private void OnGetChempionCompleted(object state) {
            if ((this.GetChempionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetChempionCompleted(this, new GetChempionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetChempionAsync(string rules, string Name, string Score) {
            this.GetChempionAsync(rules, Name, Score, null);
        }
        
        public void GetChempionAsync(string rules, string Name, string Score, object userState) {
            if ((this.onBeginGetChempionDelegate == null)) {
                this.onBeginGetChempionDelegate = new BeginOperationDelegate(this.OnBeginGetChempion);
            }
            if ((this.onEndGetChempionDelegate == null)) {
                this.onEndGetChempionDelegate = new EndOperationDelegate(this.OnEndGetChempion);
            }
            if ((this.onGetChempionCompletedDelegate == null)) {
                this.onGetChempionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetChempionCompleted);
            }
            base.InvokeAsync(this.onBeginGetChempionDelegate, new object[] {
                        rules,
                        Name,
                        Score}, this.onEndGetChempionDelegate, this.onGetChempionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.BeginGetLastWeekChempion(DicePokerWP.KniffelLeaderBoardService.GetLastWeekChempionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLastWeekChempion(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetLastWeekChempion(string rules, string Name, string Score, System.AsyncCallback callback, object asyncState) {
            DicePokerWP.KniffelLeaderBoardService.GetLastWeekChempionRequest inValue = new DicePokerWP.KniffelLeaderBoardService.GetLastWeekChempionRequest();
            inValue.Body = new DicePokerWP.KniffelLeaderBoardService.GetLastWeekChempionRequestBody();
            inValue.Body.rules = rules;
            inValue.Body.Name = Name;
            inValue.Body.Score = Score;
            return ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).BeginGetLastWeekChempion(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DicePokerWP.KniffelLeaderBoardService.GetLastWeekChempionResponse DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.EndGetLastWeekChempion(System.IAsyncResult result) {
            return base.Channel.EndGetLastWeekChempion(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndGetLastWeekChempion(System.IAsyncResult result, out string Name, out string Score) {
            DicePokerWP.KniffelLeaderBoardService.GetLastWeekChempionResponse retVal = ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).EndGetLastWeekChempion(result);
            Name = retVal.Body.Name;
            Score = retVal.Body.Score;
            return retVal.Body.GetLastWeekChempionResult;
        }
        
        private System.IAsyncResult OnBeginGetLastWeekChempion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string rules = ((string)(inValues[0]));
            string Name = ((string)(inValues[1]));
            string Score = ((string)(inValues[2]));
            return this.BeginGetLastWeekChempion(rules, Name, Score, callback, asyncState);
        }
        
        private object[] OnEndGetLastWeekChempion(System.IAsyncResult result) {
            string Name = this.GetDefaultValueForInitialization<string>();
            string Score = this.GetDefaultValueForInitialization<string>();
            bool retVal = this.EndGetLastWeekChempion(result, out Name, out Score);
            return new object[] {
                    Name,
                    Score,
                    retVal};
        }
        
        private void OnGetLastWeekChempionCompleted(object state) {
            if ((this.GetLastWeekChempionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLastWeekChempionCompleted(this, new GetLastWeekChempionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLastWeekChempionAsync(string rules, string Name, string Score) {
            this.GetLastWeekChempionAsync(rules, Name, Score, null);
        }
        
        public void GetLastWeekChempionAsync(string rules, string Name, string Score, object userState) {
            if ((this.onBeginGetLastWeekChempionDelegate == null)) {
                this.onBeginGetLastWeekChempionDelegate = new BeginOperationDelegate(this.OnBeginGetLastWeekChempion);
            }
            if ((this.onEndGetLastWeekChempionDelegate == null)) {
                this.onEndGetLastWeekChempionDelegate = new EndOperationDelegate(this.OnEndGetLastWeekChempion);
            }
            if ((this.onGetLastWeekChempionCompletedDelegate == null)) {
                this.onGetLastWeekChempionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLastWeekChempionCompleted);
            }
            base.InvokeAsync(this.onBeginGetLastWeekChempionDelegate, new object[] {
                        rules,
                        Name,
                        Score}, this.onEndGetLastWeekChempionDelegate, this.onGetLastWeekChempionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.BeginGetLastDayChempion(DicePokerWP.KniffelLeaderBoardService.GetLastDayChempionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLastDayChempion(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetLastDayChempion(string rules, string Name, string Score, System.AsyncCallback callback, object asyncState) {
            DicePokerWP.KniffelLeaderBoardService.GetLastDayChempionRequest inValue = new DicePokerWP.KniffelLeaderBoardService.GetLastDayChempionRequest();
            inValue.Body = new DicePokerWP.KniffelLeaderBoardService.GetLastDayChempionRequestBody();
            inValue.Body.rules = rules;
            inValue.Body.Name = Name;
            inValue.Body.Score = Score;
            return ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).BeginGetLastDayChempion(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DicePokerWP.KniffelLeaderBoardService.GetLastDayChempionResponse DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.EndGetLastDayChempion(System.IAsyncResult result) {
            return base.Channel.EndGetLastDayChempion(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndGetLastDayChempion(System.IAsyncResult result, out string Name, out string Score) {
            DicePokerWP.KniffelLeaderBoardService.GetLastDayChempionResponse retVal = ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).EndGetLastDayChempion(result);
            Name = retVal.Body.Name;
            Score = retVal.Body.Score;
            return retVal.Body.GetLastDayChempionResult;
        }
        
        private System.IAsyncResult OnBeginGetLastDayChempion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string rules = ((string)(inValues[0]));
            string Name = ((string)(inValues[1]));
            string Score = ((string)(inValues[2]));
            return this.BeginGetLastDayChempion(rules, Name, Score, callback, asyncState);
        }
        
        private object[] OnEndGetLastDayChempion(System.IAsyncResult result) {
            string Name = this.GetDefaultValueForInitialization<string>();
            string Score = this.GetDefaultValueForInitialization<string>();
            bool retVal = this.EndGetLastDayChempion(result, out Name, out Score);
            return new object[] {
                    Name,
                    Score,
                    retVal};
        }
        
        private void OnGetLastDayChempionCompleted(object state) {
            if ((this.GetLastDayChempionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLastDayChempionCompleted(this, new GetLastDayChempionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLastDayChempionAsync(string rules, string Name, string Score) {
            this.GetLastDayChempionAsync(rules, Name, Score, null);
        }
        
        public void GetLastDayChempionAsync(string rules, string Name, string Score, object userState) {
            if ((this.onBeginGetLastDayChempionDelegate == null)) {
                this.onBeginGetLastDayChempionDelegate = new BeginOperationDelegate(this.OnBeginGetLastDayChempion);
            }
            if ((this.onEndGetLastDayChempionDelegate == null)) {
                this.onEndGetLastDayChempionDelegate = new EndOperationDelegate(this.OnEndGetLastDayChempion);
            }
            if ((this.onGetLastDayChempionCompletedDelegate == null)) {
                this.onGetLastDayChempionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLastDayChempionCompleted);
            }
            base.InvokeAsync(this.onBeginGetLastDayChempionDelegate, new object[] {
                        rules,
                        Name,
                        Score}, this.onEndGetLastDayChempionDelegate, this.onGetLastDayChempionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.BeginGetPlayersMagics(DicePokerWP.KniffelLeaderBoardService.GetPlayersMagicsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlayersMagics(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetPlayersMagics(string username, string pass, int rolls, int manuals, int resets, System.AsyncCallback callback, object asyncState) {
            DicePokerWP.KniffelLeaderBoardService.GetPlayersMagicsRequest inValue = new DicePokerWP.KniffelLeaderBoardService.GetPlayersMagicsRequest();
            inValue.Body = new DicePokerWP.KniffelLeaderBoardService.GetPlayersMagicsRequestBody();
            inValue.Body.username = username;
            inValue.Body.pass = pass;
            inValue.Body.rolls = rolls;
            inValue.Body.manuals = manuals;
            inValue.Body.resets = resets;
            return ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).BeginGetPlayersMagics(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DicePokerWP.KniffelLeaderBoardService.GetPlayersMagicsResponse DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.EndGetPlayersMagics(System.IAsyncResult result) {
            return base.Channel.EndGetPlayersMagics(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndGetPlayersMagics(System.IAsyncResult result, out int rolls, out int manuals, out int resets) {
            DicePokerWP.KniffelLeaderBoardService.GetPlayersMagicsResponse retVal = ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).EndGetPlayersMagics(result);
            rolls = retVal.Body.rolls;
            manuals = retVal.Body.manuals;
            resets = retVal.Body.resets;
            return retVal.Body.GetPlayersMagicsResult;
        }
        
        private System.IAsyncResult OnBeginGetPlayersMagics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string pass = ((string)(inValues[1]));
            int rolls = ((int)(inValues[2]));
            int manuals = ((int)(inValues[3]));
            int resets = ((int)(inValues[4]));
            return this.BeginGetPlayersMagics(username, pass, rolls, manuals, resets, callback, asyncState);
        }
        
        private object[] OnEndGetPlayersMagics(System.IAsyncResult result) {
            int rolls = this.GetDefaultValueForInitialization<int>();
            int manuals = this.GetDefaultValueForInitialization<int>();
            int resets = this.GetDefaultValueForInitialization<int>();
            bool retVal = this.EndGetPlayersMagics(result, out rolls, out manuals, out resets);
            return new object[] {
                    rolls,
                    manuals,
                    resets,
                    retVal};
        }
        
        private void OnGetPlayersMagicsCompleted(object state) {
            if ((this.GetPlayersMagicsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlayersMagicsCompleted(this, new GetPlayersMagicsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlayersMagicsAsync(string username, string pass, int rolls, int manuals, int resets) {
            this.GetPlayersMagicsAsync(username, pass, rolls, manuals, resets, null);
        }
        
        public void GetPlayersMagicsAsync(string username, string pass, int rolls, int manuals, int resets, object userState) {
            if ((this.onBeginGetPlayersMagicsDelegate == null)) {
                this.onBeginGetPlayersMagicsDelegate = new BeginOperationDelegate(this.OnBeginGetPlayersMagics);
            }
            if ((this.onEndGetPlayersMagicsDelegate == null)) {
                this.onEndGetPlayersMagicsDelegate = new EndOperationDelegate(this.OnEndGetPlayersMagics);
            }
            if ((this.onGetPlayersMagicsCompletedDelegate == null)) {
                this.onGetPlayersMagicsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlayersMagicsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlayersMagicsDelegate, new object[] {
                        username,
                        pass,
                        rolls,
                        manuals,
                        resets}, this.onEndGetPlayersMagicsDelegate, this.onGetPlayersMagicsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.BeginAddPlayersMagics(DicePokerWP.KniffelLeaderBoardService.AddPlayersMagicsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPlayersMagics(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginAddPlayersMagics(string username, string pass, string rolls, string manuals, string resets, System.AsyncCallback callback, object asyncState) {
            DicePokerWP.KniffelLeaderBoardService.AddPlayersMagicsRequest inValue = new DicePokerWP.KniffelLeaderBoardService.AddPlayersMagicsRequest();
            inValue.Body = new DicePokerWP.KniffelLeaderBoardService.AddPlayersMagicsRequestBody();
            inValue.Body.username = username;
            inValue.Body.pass = pass;
            inValue.Body.rolls = rolls;
            inValue.Body.manuals = manuals;
            inValue.Body.resets = resets;
            return ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).BeginAddPlayersMagics(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DicePokerWP.KniffelLeaderBoardService.AddPlayersMagicsResponse DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap.EndAddPlayersMagics(System.IAsyncResult result) {
            return base.Channel.EndAddPlayersMagics(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndAddPlayersMagics(System.IAsyncResult result) {
            DicePokerWP.KniffelLeaderBoardService.AddPlayersMagicsResponse retVal = ((DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap)(this)).EndAddPlayersMagics(result);
            return retVal.Body.AddPlayersMagicsResult;
        }
        
        private System.IAsyncResult OnBeginAddPlayersMagics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string pass = ((string)(inValues[1]));
            string rolls = ((string)(inValues[2]));
            string manuals = ((string)(inValues[3]));
            string resets = ((string)(inValues[4]));
            return this.BeginAddPlayersMagics(username, pass, rolls, manuals, resets, callback, asyncState);
        }
        
        private object[] OnEndAddPlayersMagics(System.IAsyncResult result) {
            bool retVal = this.EndAddPlayersMagics(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddPlayersMagicsCompleted(object state) {
            if ((this.AddPlayersMagicsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPlayersMagicsCompleted(this, new AddPlayersMagicsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPlayersMagicsAsync(string username, string pass, string rolls, string manuals, string resets) {
            this.AddPlayersMagicsAsync(username, pass, rolls, manuals, resets, null);
        }
        
        public void AddPlayersMagicsAsync(string username, string pass, string rolls, string manuals, string resets, object userState) {
            if ((this.onBeginAddPlayersMagicsDelegate == null)) {
                this.onBeginAddPlayersMagicsDelegate = new BeginOperationDelegate(this.OnBeginAddPlayersMagics);
            }
            if ((this.onEndAddPlayersMagicsDelegate == null)) {
                this.onEndAddPlayersMagicsDelegate = new EndOperationDelegate(this.OnEndAddPlayersMagics);
            }
            if ((this.onAddPlayersMagicsCompletedDelegate == null)) {
                this.onAddPlayersMagicsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPlayersMagicsCompleted);
            }
            base.InvokeAsync(this.onBeginAddPlayersMagicsDelegate, new object[] {
                        username,
                        pass,
                        rolls,
                        manuals,
                        resets}, this.onEndAddPlayersMagicsDelegate, this.onAddPlayersMagicsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap CreateChannel() {
            return new KniffelServiceSoapClientChannel(this);
        }
        
        private class KniffelServiceSoapClientChannel : ChannelBase<DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap>, DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap {
            
            public KniffelServiceSoapClientChannel(System.ServiceModel.ClientBase<DicePokerWP.KniffelLeaderBoardService.KniffelServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginPutScore(DicePokerWP.KniffelLeaderBoardService.PutScoreRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("PutScore", _args, callback, asyncState);
                return _result;
            }
            
            public DicePokerWP.KniffelLeaderBoardService.PutScoreResponse EndPutScore(System.IAsyncResult result) {
                object[] _args = new object[0];
                DicePokerWP.KniffelLeaderBoardService.PutScoreResponse _result = ((DicePokerWP.KniffelLeaderBoardService.PutScoreResponse)(base.EndInvoke("PutScore", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPutScoreIntoTable(DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("PutScoreIntoTable", _args, callback, asyncState);
                return _result;
            }
            
            public DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableResponse EndPutScoreIntoTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableResponse _result = ((DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableResponse)(base.EndInvoke("PutScoreIntoTable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPutScoreIntoTableWithPic(DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("PutScoreIntoTableWithPic", _args, callback, asyncState);
                return _result;
            }
            
            public DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicResponse EndPutScoreIntoTableWithPic(System.IAsyncResult result) {
                object[] _args = new object[0];
                DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicResponse _result = ((DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicResponse)(base.EndInvoke("PutScoreIntoTableWithPic", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPutScoreIntoTableWithPicPureName(DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicPureNameRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("PutScoreIntoTableWithPicPureName", _args, callback, asyncState);
                return _result;
            }
            
            public DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicPureNameResponse EndPutScoreIntoTableWithPicPureName(System.IAsyncResult result) {
                object[] _args = new object[0];
                DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicPureNameResponse _result = ((DicePokerWP.KniffelLeaderBoardService.PutScoreIntoTableWithPicPureNameResponse)(base.EndInvoke("PutScoreIntoTableWithPicPureName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPutOnlineServerLog(DicePokerWP.KniffelLeaderBoardService.PutOnlineServerLogRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("PutOnlineServerLog", _args, callback, asyncState);
                return _result;
            }
            
            public DicePokerWP.KniffelLeaderBoardService.PutOnlineServerLogResponse EndPutOnlineServerLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                DicePokerWP.KniffelLeaderBoardService.PutOnlineServerLogResponse _result = ((DicePokerWP.KniffelLeaderBoardService.PutOnlineServerLogResponse)(base.EndInvoke("PutOnlineServerLog", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTopPlayers(DicePokerWP.KniffelLeaderBoardService.GetTopPlayersRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetTopPlayers", _args, callback, asyncState);
                return _result;
            }
            
            public DicePokerWP.KniffelLeaderBoardService.GetTopPlayersResponse EndGetTopPlayers(System.IAsyncResult result) {
                object[] _args = new object[0];
                DicePokerWP.KniffelLeaderBoardService.GetTopPlayersResponse _result = ((DicePokerWP.KniffelLeaderBoardService.GetTopPlayersResponse)(base.EndInvoke("GetTopPlayers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetChempion(DicePokerWP.KniffelLeaderBoardService.GetChempionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetChempion", _args, callback, asyncState);
                return _result;
            }
            
            public DicePokerWP.KniffelLeaderBoardService.GetChempionResponse EndGetChempion(System.IAsyncResult result) {
                object[] _args = new object[0];
                DicePokerWP.KniffelLeaderBoardService.GetChempionResponse _result = ((DicePokerWP.KniffelLeaderBoardService.GetChempionResponse)(base.EndInvoke("GetChempion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLastWeekChempion(DicePokerWP.KniffelLeaderBoardService.GetLastWeekChempionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetLastWeekChempion", _args, callback, asyncState);
                return _result;
            }
            
            public DicePokerWP.KniffelLeaderBoardService.GetLastWeekChempionResponse EndGetLastWeekChempion(System.IAsyncResult result) {
                object[] _args = new object[0];
                DicePokerWP.KniffelLeaderBoardService.GetLastWeekChempionResponse _result = ((DicePokerWP.KniffelLeaderBoardService.GetLastWeekChempionResponse)(base.EndInvoke("GetLastWeekChempion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLastDayChempion(DicePokerWP.KniffelLeaderBoardService.GetLastDayChempionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetLastDayChempion", _args, callback, asyncState);
                return _result;
            }
            
            public DicePokerWP.KniffelLeaderBoardService.GetLastDayChempionResponse EndGetLastDayChempion(System.IAsyncResult result) {
                object[] _args = new object[0];
                DicePokerWP.KniffelLeaderBoardService.GetLastDayChempionResponse _result = ((DicePokerWP.KniffelLeaderBoardService.GetLastDayChempionResponse)(base.EndInvoke("GetLastDayChempion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPlayersMagics(DicePokerWP.KniffelLeaderBoardService.GetPlayersMagicsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetPlayersMagics", _args, callback, asyncState);
                return _result;
            }
            
            public DicePokerWP.KniffelLeaderBoardService.GetPlayersMagicsResponse EndGetPlayersMagics(System.IAsyncResult result) {
                object[] _args = new object[0];
                DicePokerWP.KniffelLeaderBoardService.GetPlayersMagicsResponse _result = ((DicePokerWP.KniffelLeaderBoardService.GetPlayersMagicsResponse)(base.EndInvoke("GetPlayersMagics", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddPlayersMagics(DicePokerWP.KniffelLeaderBoardService.AddPlayersMagicsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("AddPlayersMagics", _args, callback, asyncState);
                return _result;
            }
            
            public DicePokerWP.KniffelLeaderBoardService.AddPlayersMagicsResponse EndAddPlayersMagics(System.IAsyncResult result) {
                object[] _args = new object[0];
                DicePokerWP.KniffelLeaderBoardService.AddPlayersMagicsResponse _result = ((DicePokerWP.KniffelLeaderBoardService.AddPlayersMagicsResponse)(base.EndInvoke("AddPlayersMagics", _args, result)));
                return _result;
            }
        }
    }
}
